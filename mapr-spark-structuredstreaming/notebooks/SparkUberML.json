{"paragraphs":[{"title":"Import needed packages","text":"import org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.sql.types.TimestampType\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans","user":"anonymous","dateUpdated":"2018-07-11T15:07:57-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark._\nimport org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.Dataset\nimport org.apache.spark.sql.types.TimestampType\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeans\n"}]},"apps":[],"jobName":"paragraph_1530556902254_-1446772070","id":"20161030-025214_1655763979","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:07:57-0700","dateFinished":"2018-07-11T15:08:00-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:34178"},{"title":"Define Schema for csv file data","text":"\ncase class Uber(dt: java.sql.Timestamp, lat: Double, lon: Double, base: String) extends Serializable\n\nval schema = StructType(Array(\n      StructField(\"dt\", TimestampType, true),\n      StructField(\"lat\", DoubleType, true),\n      StructField(\"lon\", DoubleType, true),\n      StructField(\"base\", StringType, true)\n))","user":"anonymous","dateUpdated":"2018-07-11T15:08:03-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Uber\nschema: org.apache.spark.sql.types.StructType = StructType(StructField(dt,TimestampType,true), StructField(lat,DoubleType,true), StructField(lon,DoubleType,true), StructField(base,StringType,true))\n"}]},"apps":[],"jobName":"paragraph_1530556902255_-1447156819","id":"20161030-030543_519944270","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:08:03-0700","dateFinished":"2018-07-11T15:08:03-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34179"},{"title":"Read the data from CSV file into a Dataset of Account type","text":"import sqlContext.implicits._\nval df: Dataset[Uber] = spark.read.option(\"inferSchema\", \"false\").schema(schema).option(\"header\", \"true\").csv(\"/tmp/uber.csv\").as[Uber]\n//val df = ds.filter($\"lat\" > 40.6 && $\"lat\" < 40.85  && $\"lon\" < -73.6 && $\"lon\" > -74.2  )\n\n\ndf.cache\ndf.show\ndf.count\n","user":"anonymous","dateUpdated":"2018-07-11T15:08:09-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import sqlContext.implicits._\ndf: org.apache.spark.sql.Dataset[Uber] = [dt: timestamp, lat: double ... 2 more fields]\nres110: df.type = [dt: timestamp, lat: double ... 2 more fields]\n+-------------------+-------+--------+------+\n|                 dt|    lat|     lon|  base|\n+-------------------+-------+--------+------+\n|2014-08-01 00:00:00|40.7476|-73.9871|B02598|\n|2014-08-01 00:00:00|40.7424|-74.0044|B02598|\n|2014-08-01 00:00:00| 40.751|-73.9869|B02598|\n|2014-08-01 00:00:00|40.7406|-73.9902|B02598|\n|2014-08-01 00:00:00|40.6994|-73.9591|B02617|\n|2014-08-01 00:00:00|40.6917|-73.9398|B02617|\n|2014-08-01 00:00:00|40.7063|-73.9223|B02617|\n|2014-08-01 00:00:00|40.6759|-74.0168|B02617|\n|2014-08-01 00:00:00|40.7617|-73.9847|B02617|\n|2014-08-01 00:00:00|40.6969|-73.9064|B02617|\n|2014-08-01 00:00:00|40.7623|-73.9751|B02617|\n|2014-08-01 00:00:00|40.6982|-73.9669|B02617|\n|2014-08-01 00:00:00|40.7553|-73.9253|B02617|\n|2014-08-01 00:00:00|40.7325|-73.9876|B02682|\n|2014-08-01 00:00:00|40.6754| -74.017|B02682|\n|2014-08-01 00:00:00|40.7303|-74.0029|B02682|\n|2014-08-01 00:00:00|40.7218|-73.9973|B02682|\n|2014-08-01 00:00:00|40.7134|-74.0091|B02682|\n|2014-08-01 00:00:00|40.7194|-73.9964|B02682|\n|2014-08-01 00:00:00| 40.762| -73.983|B02682|\n+-------------------+-------+--------+------+\nonly showing top 20 rows\n\nres112: Long = 814070\n"}]},"apps":[],"jobName":"paragraph_1530556902255_-1447156819","id":"20161030-030618_394385178","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:08:09-0700","dateFinished":"2018-07-11T15:08:17-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34180"},{"text":"df.printSchema","user":"anonymous","dateUpdated":"2018-07-09T15:23:33-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- dt: timestamp (nullable = true)\n |-- lat: double (nullable = true)\n |-- lon: double (nullable = true)\n |-- base: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1530556902255_-1447156819","id":"20161030-030707_2084899217","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:23:33-0700","dateFinished":"2018-07-09T15:23:33-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34181"},{"title":"Define Features Array","text":"\nval featureCols = Array(\"lat\", \"lon\")\nval assembler = new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\")\nval df2 = assembler.transform(df)\ndf2.show","user":"anonymous","dateUpdated":"2018-07-11T15:08:21-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"featureCols: Array[String] = Array(lat, lon)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_ae71006bd5a7\ndf2: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 3 more fields]\n+-------------------+-------+--------+------+------------------+\n|                 dt|    lat|     lon|  base|          features|\n+-------------------+-------+--------+------+------------------+\n|2014-08-01 00:00:00|40.7476|-73.9871|B02598|[40.7476,-73.9871]|\n|2014-08-01 00:00:00|40.7424|-74.0044|B02598|[40.7424,-74.0044]|\n|2014-08-01 00:00:00| 40.751|-73.9869|B02598| [40.751,-73.9869]|\n|2014-08-01 00:00:00|40.7406|-73.9902|B02598|[40.7406,-73.9902]|\n|2014-08-01 00:00:00|40.6994|-73.9591|B02617|[40.6994,-73.9591]|\n|2014-08-01 00:00:00|40.6917|-73.9398|B02617|[40.6917,-73.9398]|\n|2014-08-01 00:00:00|40.7063|-73.9223|B02617|[40.7063,-73.9223]|\n|2014-08-01 00:00:00|40.6759|-74.0168|B02617|[40.6759,-74.0168]|\n|2014-08-01 00:00:00|40.7617|-73.9847|B02617|[40.7617,-73.9847]|\n|2014-08-01 00:00:00|40.6969|-73.9064|B02617|[40.6969,-73.9064]|\n|2014-08-01 00:00:00|40.7623|-73.9751|B02617|[40.7623,-73.9751]|\n|2014-08-01 00:00:00|40.6982|-73.9669|B02617|[40.6982,-73.9669]|\n|2014-08-01 00:00:00|40.7553|-73.9253|B02617|[40.7553,-73.9253]|\n|2014-08-01 00:00:00|40.7325|-73.9876|B02682|[40.7325,-73.9876]|\n|2014-08-01 00:00:00|40.6754| -74.017|B02682| [40.6754,-74.017]|\n|2014-08-01 00:00:00|40.7303|-74.0029|B02682|[40.7303,-74.0029]|\n|2014-08-01 00:00:00|40.7218|-73.9973|B02682|[40.7218,-73.9973]|\n|2014-08-01 00:00:00|40.7134|-74.0091|B02682|[40.7134,-74.0091]|\n|2014-08-01 00:00:00|40.7194|-73.9964|B02682|[40.7194,-73.9964]|\n|2014-08-01 00:00:00| 40.762| -73.983|B02682|  [40.762,-73.983]|\n+-------------------+-------+--------+------+------------------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1530556902255_-1447156819","id":"20161030-041240_922666463","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:08:21-0700","dateFinished":"2018-07-11T15:08:23-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34182"},{"title":"Create KMeans Estimator","text":"val kmeans = new KMeans().setK(10).setFeaturesCol(\"features\").setMaxIter(10)","user":"anonymous","dateUpdated":"2018-07-11T15:08:28-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"kmeans: org.apache.spark.ml.clustering.KMeans = kmeans_e72407a0860b\n"}]},"apps":[],"jobName":"paragraph_1530556902255_-1447156819","id":"20170710-141916_128183205","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:08:28-0700","dateFinished":"2018-07-11T15:08:28-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34183"},{"title":"Fit the model to the Training data ","text":"val Array(trainingData, testData) = df2.randomSplit(Array(0.7, 0.3), 5043)\nval model = kmeans.fit(trainingData)\nprintln(\"Final Centers: \")\nmodel.clusterCenters.foreach(println)","user":"anonymous","dateUpdated":"2018-07-11T15:08:34-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"trainingData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [dt: timestamp, lat: double ... 3 more fields]\ntestData: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] = [dt: timestamp, lat: double ... 3 more fields]\nmodel: org.apache.spark.ml.clustering.KMeansModel = kmeans_e72407a0860b\nFinal Centers: \n[40.7564201526695,-73.98253669425347]\n[40.69774864372469,-74.1746190485833]\n[40.65913663371848,-73.77616609142027]\n[40.727167721391965,-73.99996932251409]\n[40.76353997924329,-73.86457868292527]\n[40.687090541492736,-73.93082539975063]\n[40.68442577627514,-73.98240710059163]\n[40.722999595221516,-73.95202518341551]\n[40.63872788232504,-73.98280701524538]\n[40.78630539643714,-73.95464630711642]\n"}]},"apps":[],"jobName":"paragraph_1530556902256_-1436768599","id":"20170710-143129_239931631","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-11T15:08:34-0700","dateFinished":"2018-07-11T15:08:41-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34184"},{"text":"z.angularBind(\"centroid\", model.clusterCenters)","user":"anonymous","dateUpdated":"2018-07-11T15:08:44-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1530565326417_346001200","id":"20180702-140206_2054475007","dateCreated":"2018-07-02T14:02:06-0700","dateStarted":"2018-07-11T15:08:44-0700","dateFinished":"2018-07-11T15:08:45-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34185"},{"text":"%angular\n<!-- Avoid constantly editing JS and list the Angular vars you want exposed in an HTML attribute: -->\n<div id=\"dummy\" vars=\"centroid\"></div>\n<script type=\"text/javascript\">\n  //Given an element in the note & list of values to fetch from Spark\n  //window.angularVars.myVal will be current value of backend Spark val of same name\n  function hoist(element){\n    var varNames = element.attr('vars').split(',');\n    window.angularVars = {};\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    $.each(varNames, function(i, v){\n      window[v+'-watcher'] = scope.$watch(v, function(newVal, oldVal){\n        window.angularVars[v] = newVal;\n      });\n    });\n  }\n  hoist($('#dummy'));\n</script>","user":"anonymous","dateUpdated":"2018-07-11T15:08:47-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<!-- Avoid constantly editing JS and list the Angular vars you want exposed in an HTML attribute: -->\n<div id=\"dummy\" vars=\"centroid\"></div>\n<script type=\"text/javascript\">\n  //Given an element in the note & list of values to fetch from Spark\n  //window.angularVars.myVal will be current value of backend Spark val of same name\n  function hoist(element){\n    var varNames = element.attr('vars').split(',');\n    window.angularVars = {};\n    var scope = angular.element(element.parent('.ng-scope')).scope().compiledScope;\n    $.each(varNames, function(i, v){\n      window[v+'-watcher'] = scope.$watch(v, function(newVal, oldVal){\n        window.angularVars[v] = newVal;\n      });\n    });\n  }\n  hoist($('#dummy'));\n</script>"}]},"apps":[],"jobName":"paragraph_1530565440812_1542371065","id":"20180702-140400_705269843","dateCreated":"2018-07-02T14:04:00-0700","dateStarted":"2018-07-11T15:08:47-0700","dateFinished":"2018-07-11T15:08:47-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34186"},{"text":"%angular\n<div id=\"map\" style=\"height:500px;width:100%;\"></div>\n<script type=\"text/javascript\">\n\nfunction initMap() {\n    var centroid = window.angularVars.centroid;\n     var POIs = {};\n    var NYC = {lat: 40.76664545866995, lng: -73.971943532955};\n    var map = new google.maps.Map(document.getElementById('map'), {zoom: 11, center: NYC });\n    //  Draw circles for each Centroid\n    $.each(centroid, function(i, v){\n         POIs[v.values[0]] = v.values;\n         var pos = {lat: parseFloat(v.values[0]), lng: parseFloat(v.values[1]) };\n         var color = '#FF0000'\n          marker = new google.maps.Marker({\n                            position: pos,\n                            label: String(i),\n                            map: map\n                        });\n    });\n    \n}\n\n//Only load GMaps once\nif (typeof google === 'object' && typeof google.maps === 'object') initMap();\nelse {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    //Replace with your API key\n    var apiKey = 'AIzaSyBbKXTPdUuKimkq5ONrChpNuxnI5SMhMUI';\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=\"+apiKey+\"&libraries=visualization&callback=initMap\";\n    document.body.appendChild(script);\n}\n</script>\n","user":"anonymous","dateUpdated":"2018-07-11T15:08:51-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/undefined","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"ANGULAR","data":"<div id=\"map\" style=\"height:500px;width:100%;\"></div>\n<script type=\"text/javascript\">\n\nfunction initMap() {\n    var centroid = window.angularVars.centroid;\n     var POIs = {};\n    var NYC = {lat: 40.76664545866995, lng: -73.971943532955};\n    var map = new google.maps.Map(document.getElementById('map'), {zoom: 11, center: NYC });\n    //  Draw circles for each Centroid\n    $.each(centroid, function(i, v){\n         POIs[v.values[0]] = v.values;\n         var pos = {lat: parseFloat(v.values[0]), lng: parseFloat(v.values[1]) };\n         var color = '#FF0000'\n          marker = new google.maps.Marker({\n                            position: pos,\n                            label: String(i),\n                            map: map\n                        });\n    });\n    \n}\n\n//Only load GMaps once\nif (typeof google === 'object' && typeof google.maps === 'object') initMap();\nelse {\n    var script = document.createElement(\"script\");\n    script.type = \"text/javascript\";\n    //Replace with your API key\n    var apiKey = 'AIzaSyBbKXTPdUuKimkq5ONrChpNuxnI5SMhMUI';\n    script.src = \"https://maps.googleapis.com/maps/api/js?key=\"+apiKey+\"&libraries=visualization&callback=initMap\";\n    document.body.appendChild(script);\n}\n</script>"}]},"apps":[],"jobName":"paragraph_1530565450221_-403304123","id":"20180702-140410_566340641","dateCreated":"2018-07-02T14:04:10-0700","dateStarted":"2018-07-11T15:08:51-0700","dateFinished":"2018-07-11T15:08:51-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34187"},{"title":"Get Cluster groupings for Evaluation","text":" val clusters = model.transform(df2)\n clusters.show\n clusters.createOrReplaceTempView(\"uber\")\n","user":"anonymous","dateUpdated":"2018-07-09T15:58:47-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"clusters: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 4 more fields]\n+-------------------+-------+--------+------+------------------+----------+\n|                 dt|    lat|     lon|  base|          features|prediction|\n+-------------------+-------+--------+------+------------------+----------+\n|2014-08-01 00:00:00|40.7476|-73.9871|B02598|[40.7476,-73.9871]|         0|\n|2014-08-01 00:00:00|40.7424|-74.0044|B02598|[40.7424,-74.0044]|         3|\n|2014-08-01 00:00:00| 40.751|-73.9869|B02598| [40.751,-73.9869]|         0|\n|2014-08-01 00:00:00|40.7406|-73.9902|B02598|[40.7406,-73.9902]|         3|\n|2014-08-01 00:00:00|40.6994|-73.9591|B02617|[40.6994,-73.9591]|         7|\n|2014-08-01 00:00:00|40.6917|-73.9398|B02617|[40.6917,-73.9398]|         5|\n|2014-08-01 00:00:00|40.7063|-73.9223|B02617|[40.7063,-73.9223]|         5|\n|2014-08-01 00:00:00|40.6759|-74.0168|B02617|[40.6759,-74.0168]|         6|\n|2014-08-01 00:00:00|40.7617|-73.9847|B02617|[40.7617,-73.9847]|         0|\n|2014-08-01 00:00:00|40.6969|-73.9064|B02617|[40.6969,-73.9064]|         5|\n|2014-08-01 00:00:00|40.7623|-73.9751|B02617|[40.7623,-73.9751]|         0|\n|2014-08-01 00:00:00|40.6982|-73.9669|B02617|[40.6982,-73.9669]|         6|\n|2014-08-01 00:00:00|40.7553|-73.9253|B02617|[40.7553,-73.9253]|         7|\n|2014-08-01 00:00:00|40.7325|-73.9876|B02682|[40.7325,-73.9876]|         3|\n|2014-08-01 00:00:00|40.6754| -74.017|B02682| [40.6754,-74.017]|         6|\n|2014-08-01 00:00:00|40.7303|-74.0029|B02682|[40.7303,-74.0029]|         3|\n|2014-08-01 00:00:00|40.7218|-73.9973|B02682|[40.7218,-73.9973]|         3|\n|2014-08-01 00:00:00|40.7134|-74.0091|B02682|[40.7134,-74.0091]|         3|\n|2014-08-01 00:00:00|40.7194|-73.9964|B02682|[40.7194,-73.9964]|         3|\n|2014-08-01 00:00:00| 40.762| -73.983|B02682|  [40.762,-73.983]|         0|\n+-------------------+-------+--------+------+------------------+----------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1530556902256_-1436768599","id":"20161030-080908_381831760","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:58:47-0700","dateFinished":"2018-07-09T15:58:48-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34188"},{"title":"How many pickups occurred in each cluster?","text":"clusters.groupBy(\"prediction\").count().orderBy(desc( \"count\")).show","user":"anonymous","dateUpdated":"2018-07-09T15:25:58-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----------+------+\n|prediction| count|\n+----------+------+\n|         3|261731|\n|         0|256142|\n|         9| 90294|\n|         6| 50684|\n|         7| 50617|\n|         4| 32927|\n|         2| 26247|\n|         5| 26199|\n|         8| 12101|\n|         1|  7128|\n+----------+------+\n\n"}]},"apps":[],"jobName":"paragraph_1530556902256_-1436768599","id":"20170710-160950_712231335","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:25:58-0700","dateFinished":"2018-07-09T15:25:59-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34189"},{"title":"which hours of the day and which cluster had the highest number of pickups? ","text":"\nclusters.select(hour($\"dt\").alias(\"hour\"), $\"prediction\")\n.groupBy(\"hour\",\"prediction\").agg(count(\"prediction\")\n.alias(\"count\")).orderBy(desc( \"count\")).show\n","user":"anonymous","dateUpdated":"2018-07-09T15:26:03-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+----+----------+-----+\n|hour|prediction|count|\n+----+----------+-----+\n|  17|         0|21536|\n|  16|         0|20603|\n|  18|         0|19826|\n|  19|         0|17823|\n|  21|         3|17498|\n|  17|         3|17428|\n|  15|         0|17340|\n|  18|         3|17116|\n|  19|         3|17050|\n|  20|         3|16798|\n|  22|         3|16499|\n|  20|         0|16405|\n|  16|         3|15959|\n|  21|         0|15133|\n|  15|         3|14552|\n|  14|         0|13227|\n|  23|         3|12780|\n|  22|         0|12262|\n|  14|         3|12157|\n|  13|         0|11597|\n+----+----------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1530556902256_-1436768599","id":"20161031-003546_1652957647","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:26:03-0700","dateFinished":"2018-07-09T15:26:05-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34190"},{"text":"z.show(clusters.select(hour($\"dt\").alias(\"hour\"), $\"prediction\")\n.groupBy(\"hour\",\"prediction\").agg(count(\"prediction\")\n.alias(\"count\")).orderBy( \"hour\",\"prediction\"))\n","user":"anonymous","dateUpdated":"2018-07-09T15:26:11-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"helium":{},"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"hour","index":0,"aggr":"sum"}],"values":[{"name":"count","index":2,"aggr":"sum"}],"groups":[{"name":"prediction","index":1,"aggr":"sum"}],"scatter":{"xAxis":{"name":"hour","index":0,"aggr":"sum"},"yAxis":{"name":"prediction","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hour\tprediction\tcount\n0\t0\t4845\n0\t1\t165\n0\t2\t556\n0\t3\t8435\n0\t4\t384\n0\t5\t1121\n0\t6\t1461\n0\t7\t2061\n0\t8\t349\n0\t9\t1569\n1\t0\t3131\n1\t1\t107\n1\t2\t189\n1\t3\t6171\n1\t4\t279\n1\t5\t794\n1\t6\t794\n1\t7\t1490\n1\t8\t224\n1\t9\t993\n2\t0\t2122\n2\t1\t26\n2\t2\t131\n2\t3\t4273\n2\t4\t209\n2\t5\t646\n2\t6\t528\n2\t7\t1113\n2\t8\t170\n2\t9\t672\n3\t0\t2410\n3\t1\t33\n3\t2\t128\n3\t3\t3659\n3\t4\t259\n3\t5\t634\n3\t6\t641\n3\t7\t952\n3\t8\t232\n3\t9\t1198\n4\t0\t2512\n4\t1\t188\n4\t2\t724\n4\t3\t3482\n4\t4\t328\n4\t5\t678\n4\t6\t750\n4\t7\t983\n4\t8\t278\n4\t9\t1594\n5\t0\t3514\n5\t1\t187\n5\t2\t1143\n5\t3\t4529\n5\t4\t479\n5\t5\t876\n5\t6\t1222\n5\t7\t1366\n5\t8\t367\n5\t9\t2536\n6\t0\t5839\n6\t1\t196\n6\t2\t1240\n6\t3\t7285\n6\t4\t728\n6\t5\t933\n6\t6\t1755\n6\t7\t1759\n6\t8\t409\n6\t9\t4325\n7\t0\t9170\n7\t1\t213\n7\t2\t776\n7\t3\t10028\n7\t4\t1068\n7\t5\t1067\n7\t6\t2123\n7\t7\t2127\n7\t8\t558\n7\t9\t6426\n8\t0\t9915\n8\t1\t179\n8\t2\t475\n8\t3\t10563\n8\t4\t1372\n8\t5\t981\n8\t6\t2115\n8\t7\t1998\n8\t8\t619\n8\t9\t5858\n9\t0\t8845\n9\t1\t188\n9\t2\t582\n9\t3\t8372\n9\t4\t1612\n9\t5\t1080\n9\t6\t2031\n9\t7\t2045\n9\t8\t506\n9\t9\t4354\n10\t0\t9617\n10\t1\t232\n10\t2\t655\n10\t3\t8404\n10\t4\t1595\n10\t5\t1026\n10\t6\t1932\n10\t7\t1936\n10\t8\t527\n10\t9\t4123\n11\t0\t10045\n11\t1\t322\n11\t2\t698\n11\t3\t8932\n11\t4\t1516\n11\t5\t1144\n11\t6\t1984\n11\t7\t1855\n11\t8\t558\n11\t9\t3971\n12\t0\t10391\n12\t1\t319\n12\t2\t954\n12\t3\t9351\n12\t4\t1384\n12\t5\t993\n12\t6\t1907\n12\t7\t1818\n12\t8\t486\n12\t9\t3762\n13\t0\t11597\n13\t1\t401\n13\t2\t1221\n13\t3\t10410\n13\t4\t1627\n13\t5\t1006\n13\t6\t2208\n13\t7\t1870\n13\t8\t535\n13\t9\t4104\n14\t0\t13227\n14\t1\t401\n14\t2\t2028\n14\t3\t12157\n14\t4\t1640\n14\t5\t1046\n14\t6\t2427\n14\t7\t1940\n14\t8\t568\n14\t9\t4398\n15\t0\t17340\n15\t1\t523\n15\t2\t1719\n15\t3\t14552\n15\t4\t2023\n15\t5\t1076\n15\t6\t2495\n15\t7\t2140\n15\t8\t569\n15\t9\t4895\n16\t0\t20603\n16\t1\t502\n16\t2\t1544\n16\t3\t15959\n16\t4\t1995\n16\t5\t1119\n16\t6\t2740\n16\t7\t2351\n16\t8\t624\n16\t9\t5172\n17\t0\t21536\n17\t1\t430\n17\t2\t1338\n17\t3\t17428\n17\t4\t2102\n17\t5\t1372\n17\t6\t3201\n17\t7\t2719\n17\t8\t667\n17\t9\t5389\n18\t0\t19826\n18\t1\t422\n18\t2\t1443\n18\t3\t17116\n18\t4\t2182\n18\t5\t1370\n18\t6\t3156\n18\t7\t3050\n18\t8\t681\n18\t9\t5349\n19\t0\t17823\n19\t1\t482\n19\t2\t1775\n19\t3\t17050\n19\t4\t2219\n19\t5\t1471\n19\t6\t3021\n19\t7\t2987\n19\t8\t689\n19\t9\t4657\n20\t0\t16405\n20\t1\t452\n20\t2\t1819\n20\t3\t16798\n20\t4\t2419\n20\t5\t1458\n20\t6\t3271\n20\t7\t3043\n20\t8\t698\n20\t9\t4460\n21\t0\t15133\n21\t1\t396\n21\t2\t1873\n21\t3\t17498\n21\t4\t2518\n21\t5\t1445\n21\t6\t3513\n21\t7\t3170\n21\t8\t643\n21\t9\t4225\n22\t0\t12262\n22\t1\t428\n22\t2\t1736\n22\t3\t16499\n22\t4\t2093\n22\t5\t1521\n22\t6\t3077\n22\t7\t3119\n22\t8\t634\n22\t9\t3790\n23\t0\t8034\n23\t1\t336\n23\t2\t1500\n23\t3\t12780\n23\t4\t896\n23\t5\t1342\n23\t6\t2332\n23\t7\t2725\n23\t8\t510\n23\t9\t2474\n"}]},"apps":[],"jobName":"paragraph_1530556902256_-1436768599","id":"20161031-005512_510256311","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:26:11-0700","dateFinished":"2018-07-09T15:26:13-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34191"},{"text":"z.show(sqlContext.sql(\"SELECT hour(uber.dt) as hr,count(prediction) as ct FROM uber group By hour(uber.dt)\"))","user":"anonymous","dateUpdated":"2018-07-09T15:26:58-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[{"helium":{},"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"hr","index":0,"aggr":"sum"}],"values":[{"name":"ct","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"hr","index":0,"aggr":"sum"},"yAxis":{"name":"ct","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hr\tct\n12\t31365\n22\t45159\n1\t14172\n13\t34979\n16\t52609\n6\t24469\n3\t10146\n20\t50823\n5\t16219\n19\t52174\n15\t47332\n17\t56182\n9\t29615\n4\t11517\n8\t34075\n23\t32929\n7\t33556\n10\t30047\n21\t50414\n11\t31025\n14\t39832\n2\t9890\n0\t20946\n18\t54595\n"}]},"apps":[],"jobName":"paragraph_1530556902257_-1437153348","id":"20161031-005940_1796057341","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:26:58-0700","dateFinished":"2018-07-09T15:26:59-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34192"},{"text":"%sql\n\nSELECT * from uber limit 5\n","user":"anonymous","dateUpdated":"2018-07-09T15:27:12-0700","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dt\tlat\tlon\tbase\tfeatures\tprediction\n2014-08-01 00:00:00.0\t40.7476\t-73.9871\tB02598\t[40.7476,-73.9871]\t0\n2014-08-01 00:00:00.0\t40.7424\t-74.0044\tB02598\t[40.7424,-74.0044]\t3\n2014-08-01 00:00:00.0\t40.751\t-73.9869\tB02598\t[40.751,-73.9869]\t0\n2014-08-01 00:00:00.0\t40.7406\t-73.9902\tB02598\t[40.7406,-73.9902]\t3\n2014-08-01 00:00:00.0\t40.6994\t-73.9591\tB02617\t[40.6994,-73.9591]\t7\n"}]},"apps":[],"jobName":"paragraph_1530556902257_-1437153348","id":"20161031-010009_1770812714","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:27:12-0700","dateFinished":"2018-07-09T15:27:12-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34193"},{"text":"%sql\nSELECT COUNT(prediction), prediction\nFROM uber\nGROUP BY prediction\nORDER BY COUNT(prediction) DESC\n","user":"anonymous","dateUpdated":"2018-07-09T15:27:20-0700","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":[{"helium":{},"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"prediction","index":1,"aggr":"sum"}],"values":[{"name":"count(prediction)","index":0,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"hr","index":0,"aggr":"sum"}},"setting":{"multiBarChart":{}},"commonSetting":{}}}],"enabled":true,"editorSetting":{"language":"sql"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"count(prediction)\tprediction\n261731\t3\n256142\t0\n90294\t9\n50684\t6\n50617\t7\n32927\t4\n26247\t2\n26199\t5\n12101\t8\n7128\t1\n"}]},"apps":[],"jobName":"paragraph_1530556902257_-1437153348","id":"20161031-082621_1269056378","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:27:20-0700","dateFinished":"2018-07-09T15:27:21-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34194"},{"text":"  model.write.overwrite().save(\"/apps/ubermodel\")","user":"anonymous","dateUpdated":"2018-07-09T15:28:34-0700","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":[],"enabled":true,"editorSetting":{"language":"scala"}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1530556902257_-1437153348","id":"20161116-075433_1562509402","dateCreated":"2018-07-02T11:41:42-0700","dateStarted":"2018-07-09T15:28:34-0700","dateFinished":"2018-07-09T15:28:34-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:34195"},{"text":"","dateUpdated":"2018-07-02T11:41:42-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1530556902257_-1437153348","id":"20161213-063243_842303880","dateCreated":"2018-07-02T11:41:42-0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:34196"}],"name":"SparkUberML","id":"2DHRH616C","angularObjects":{"2D1RDNPG7:shared_process":[],"2CZY6RGGW:shared_process":[{"name":"centroid","object":[{"values":[40.7564201526695,-73.98253669425347]},{"values":[40.69774864372469,-74.1746190485833]},{"values":[40.65913663371848,-73.77616609142027]},{"values":[40.727167721391965,-73.99996932251409]},{"values":[40.76353997924329,-73.86457868292527]},{"values":[40.687090541492736,-73.93082539975063]},{"values":[40.68442577627514,-73.98240710059163]},{"values":[40.722999595221516,-73.95202518341551]},{"values":[40.63872788232504,-73.98280701524538]},{"values":[40.78630539643714,-73.95464630711642]}],"noteId":"2DHRH616C"}],"2D1X9BGYQ:shared_process":[],"2D23NTXKZ:shared_process":[],"2D17U7MQZ:shared_process":[],"2D1G7DFJ3:shared_process":[],"2D1N6AW6W:shared_process":[],"2D2AEVMHC:shared_process":[],"2D11UYDEH:shared_process":[],"2D1AEZYWW:shared_process":[],"2D4B74HZR:shared_process":[],"2CZVDCKWE:shared_process":[],"2D2SQCKKS:shared_process":[],"2D11WSKEQ:shared_process":[],"2D2CKFTGH:shared_process":[],"2D3PPPREV:shared_process":[],"2D3TRC9QZ:shared_process":[],"2D1HQ6WB4:shared_process":[],"2D1NT65H6:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}