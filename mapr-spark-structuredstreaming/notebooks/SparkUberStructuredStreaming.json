{"paragraphs":[{"text":"import org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\nimport org.apache.spark.streaming._\n\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeansModel\n","user":"anonymous","dateUpdated":"2018-07-11T16:21:29-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.types._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql._\nimport org.apache.spark.streaming._\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.clustering.KMeansModel\n"}]},"apps":[],"jobName":"paragraph_1530574473850_-37806650","id":"20170919-164412_663650782","dateCreated":"2018-07-02T16:34:33-0700","dateStarted":"2018-07-11T16:21:29-0700","dateFinished":"2018-07-11T16:21:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:15536"},{"title":"Load the saved Machine Learning model ","text":"val model = KMeansModel.load(\"/apps/ubermodel\")\n// Create a dataframe with cluster id and location\ncase class Center(cid: Integer, clat: Double, clon: Double)   extends Serializable \nvar ac = new Array[Center](10)\nvar index: Int = 0\n model.clusterCenters.foreach(x => {\n      ac(index) = Center(index, x(0), x(1));\n      index += 1;\n    })\n val ccdf = spark.createDataset(ac)\n ccdf.show ","user":"anonymous","dateUpdated":"2018-07-11T16:21:33-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"model: org.apache.spark.ml.clustering.KMeansModel = kmeans_cdc4b2fd956a\ndefined class Center\nac: Array[Center] = Array(null, null, null, null, null, null, null, null, null, null)\nindex: Int = 0\nccdf: org.apache.spark.sql.Dataset[Center] = [cid: int, clat: double ... 1 more field]\n+---+------------------+------------------+\n|cid|              clat|              clon|\n+---+------------------+------------------+\n|  0|  40.7564201526695|-73.98253669425347|\n|  1| 40.69774864372469| -74.1746190485833|\n|  2| 40.65913663371848|-73.77616609142027|\n|  3|40.727167721391965|-73.99996932251409|\n|  4| 40.76353997924329|-73.86457868292527|\n|  5|40.687090541492736|-73.93082539975063|\n|  6| 40.68442577627514|-73.98240710059163|\n|  7|40.722999595221516|-73.95202518341551|\n|  8| 40.63872788232504|-73.98280701524538|\n|  9| 40.78630539643714|-73.95464630711642|\n+---+------------------+------------------+\n\n"}]},"apps":[],"jobName":"paragraph_1530629537856_1814626776","id":"20180703-075217_1487726440","dateCreated":"2018-07-03T07:52:17-0700","dateStarted":"2018-07-11T16:21:33-0700","dateFinished":"2018-07-11T16:21:36-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15537"},{"title":"Define the Uber Schema","text":"case class Uber(dt: String, lat: Double, lon: Double, base: String, rdt: String)   extends Serializable\n // Parse string into Uber case class\n def parseUber(str: String): Uber = {\n    val p = str.split(\",\")\n    Uber(p(0), p(1).toDouble, p(2).toDouble, p(3), p(4))\n }  ","user":"anonymous","dateUpdated":"2018-07-11T16:21:40-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class Uber\nparseUber: (str: String)Uber\n"}]},"apps":[],"jobName":"paragraph_1530574473851_-38191399","id":"20180614-162851_1497489065","dateCreated":"2018-07-02T16:34:33-0700","dateStarted":"2018-07-11T16:21:40-0700","dateFinished":"2018-07-11T16:21:41-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15538"},{"title":"Read the data from a topic into a Dataframe","text":"\nvar topic: String = \"/apps/uberstream:ubers\"\n\nval df1 = spark.readStream.format(\"kafka\")\n    .option(\"kafka.bootstrap.servers\", \"maprdemo:9092\" )\n    .option(\"subscribe\", topic)\n    .option(\"group.id\", \"testgroup\")\n    .option(\"startingOffsets\", \"earliest\")\n    .option(\"failOnDataLoss\", false)\n    .option(\"maxOffsetsPerTrigger\", 100)\n    .load()\n\nimport spark.implicits._\n\nspark.udf.register(\"deserialize\", \n    (message: String) => parseUber(message))\n\nval df2 = df1.selectExpr(\"\"\"deserialize(CAST(value as STRING)) AS message\"\"\")\n      .select($\"message\".as[Uber])     \n\n","user":"anonymous","dateUpdated":"2018-07-11T16:21:44-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"topic: String = /apps/uberstream:ubers\ndf1: org.apache.spark.sql.DataFrame = [key: binary, value: binary ... 5 more fields]\nimport spark.implicits._\nres127: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(<function1>,StructType(StructField(dt,StringType,true), StructField(lat,DoubleType,false), StructField(lon,DoubleType,false), StructField(base,StringType,true), StructField(rdt,StringType,true)),Some(List(StringType)))\ndf2: org.apache.spark.sql.Dataset[Uber] = [dt: string, lat: double ... 3 more fields]\n"}]},"apps":[],"jobName":"paragraph_1530574473851_-38191399","id":"20170912-093030_1095767690","dateCreated":"2018-07-02T16:34:33-0700","dateStarted":"2018-07-11T16:21:44-0700","dateFinished":"2018-07-11T16:21:47-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15539"},{"text":"df1.printSchema()","user":"anonymous","dateUpdated":"2018-07-09T16:07:58-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{"0":{"graph":{"mode":"table","height":626,"optionOpen":false}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- key: binary (nullable = true)\n |-- value: binary (nullable = true)\n |-- topic: string (nullable = true)\n |-- partition: integer (nullable = true)\n |-- offset: long (nullable = true)\n |-- timestamp: timestamp (nullable = true)\n |-- timestampType: integer (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1530574473851_-38191399","id":"20170918-213807_1223642162","dateCreated":"2018-07-02T16:34:33-0700","dateStarted":"2018-07-09T16:07:58-0700","dateFinished":"2018-07-09T16:07:58-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15540"},{"title":"Add the Cluster Id for trip location from Model to a Dataframe","text":"\nval featureCols = Array(\"lat\", \"lon\")\nval assembler = new VectorAssembler()\n    .setInputCols(featureCols)\n    .setOutputCol(\"features\")\nval df3 = assembler.transform(df2)\n\nval clusters1 = model.transform(df3)\n\nval temp= clusters1.select($\"dt\".cast(TimestampType), \n    $\"lat\", $\"lon\", $\"base\",$\"rdt\", $\"prediction\"\n    .alias(\"cid\"))\n    \n // Uber class enriched with Cluster id and  cluster lat lon\ncase class UberC(dt: java.sql.Timestamp, lat: Double, lon: Double, \n    base: String, rdt: String, \n    cid: Integer, clat: Double, clon: Double) extends Serializable\nval clusters = temp.join(ccdf, Seq(\"cid\")).as[UberC]\n\n      \n     ","user":"anonymous","dateUpdated":"2018-07-11T16:21:51-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"featureCols: Array[String] = Array(lat, lon)\nassembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_e35632b517d9\ndf3: org.apache.spark.sql.DataFrame = [dt: string, lat: double ... 4 more fields]\nclusters1: org.apache.spark.sql.DataFrame = [dt: string, lat: double ... 5 more fields]\ntemp: org.apache.spark.sql.DataFrame = [dt: timestamp, lat: double ... 4 more fields]\ndefined class UberC\nclusters: org.apache.spark.sql.Dataset[UberC] = [cid: int, dt: timestamp ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1530574473851_-38191399","id":"20180614-163504_856983168","dateCreated":"2018-07-02T16:34:33-0700","dateStarted":"2018-07-11T16:21:51-0700","dateFinished":"2018-07-11T16:21:55-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15541"},{"text":"// Uber with unique Id and Cluster id and  cluster lat lon\ncase class UberwId(_id: String, dt: java.sql.Timestamp, lat: Double, lon: Double,  \n    base: String, cid: Integer, clat: Double, clon: Double) extends Serializable\n    \n// enrich with unique id for Mapr-DB\ndef createUberwId(uber: UberC): UberwId = {\n    val id = uber.cid + \"_\" + uber.rdt \n    UberwId(id, uber.dt, uber.lat, uber.lon, uber.base, uber.cid , uber.clat, uber.clon)\n} \nval cdf: Dataset[UberwId] = clusters.map(uber => createUberwId(uber))      \n","user":"anonymous","dateUpdated":"2018-07-11T16:21:57-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"defined class UberwId\ncreateUberwId: (uber: UberC)UberwId\ncdf: org.apache.spark.sql.Dataset[UberwId] = [_id: string, dt: timestamp ... 6 more fields]\n"}]},"apps":[],"jobName":"paragraph_1531177813541_1134619915","id":"20180709-161013_1427000981","dateCreated":"2018-07-09T16:10:13-0700","dateStarted":"2018-07-11T16:21:57-0700","dateFinished":"2018-07-11T16:21:58-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15542"},{"text":"val streamingquery = cdf\n    .writeStream\n    .queryName(\"uber\")\n    .format(\"memory\")\n    .outputMode(\"append\")\n    .start","user":"anonymous","dateUpdated":"2018-07-11T16:22:23-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"streamingquery: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@459d9b53\n"}]},"apps":[],"jobName":"paragraph_1530575184421_-1783765987","id":"20180702-164624_781461375","dateCreated":"2018-07-02T16:46:24-0700","dateStarted":"2018-07-11T16:22:23-0700","dateFinished":"2018-07-11T16:22:24-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15543"},{"text":"%sql  select * from uber limit 10","user":"anonymous","dateUpdated":"2018-07-10T13:09:19-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"_id\tdt\tlat\tlon\tbase\tcid\tclat\tclon\n0_9223370505601502336\t2014-08-01 00:00:00.0\t40.7476\t-73.9871\tB02598\t0\t40.7564201526695\t-73.98253669425347\n3_9223370505601500625\t2014-08-01 00:00:00.0\t40.7424\t-74.0044\tB02598\t3\t40.727167721391965\t-73.99996932251409\n0_9223370505601500564\t2014-08-01 00:00:00.0\t40.751\t-73.9869\tB02598\t0\t40.7564201526695\t-73.98253669425347\n3_9223370505601500504\t2014-08-01 00:00:00.0\t40.7406\t-73.9902\tB02598\t3\t40.727167721391965\t-73.99996932251409\n7_9223370505601500443\t2014-08-01 00:00:00.0\t40.6994\t-73.9591\tB02617\t7\t40.722999595221516\t-73.95202518341551\n5_9223370505601500383\t2014-08-01 00:00:00.0\t40.6917\t-73.9398\tB02617\t5\t40.687090541492736\t-73.93082539975063\n5_9223370505601500322\t2014-08-01 00:00:00.0\t40.7063\t-73.9223\tB02617\t5\t40.687090541492736\t-73.93082539975063\n6_9223370505601500262\t2014-08-01 00:00:00.0\t40.6759\t-74.0168\tB02617\t6\t40.68442577627514\t-73.98240710059163\n0_9223370505601500202\t2014-08-01 00:00:00.0\t40.7617\t-73.9847\tB02617\t0\t40.7564201526695\t-73.98253669425347\n5_9223370505601500141\t2014-08-01 00:00:00.0\t40.6969\t-73.9064\tB02617\t5\t40.687090541492736\t-73.93082539975063\n"}]},"apps":[],"jobName":"paragraph_1530647084360_-691133750","id":"20180703-124444_301447550","dateCreated":"2018-07-03T12:44:44-0700","dateStarted":"2018-07-10T13:09:19-0700","dateFinished":"2018-07-10T13:09:20-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15544"},{"text":"%sql\nSELECT hour(uber.dt) as hr,cid, count(cid) as ct FROM uber group By hour(uber.dt), cid","user":"anonymous","dateUpdated":"2018-07-11T16:23:12-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"hr","index":0,"aggr":"sum"}],"groups":[{"name":"cid","index":1,"aggr":"sum"}],"values":[{"name":"ct","index":2,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hr\tcid\tct\n23\t6\t128\n10\t2\t16\n16\t3\t639\n17\t2\t49\n17\t1\t18\n1\t0\t164\n6\t1\t7\n17\t3\t788\n22\t8\t35\n7\t4\t34\n2\t2\t2\n22\t9\t170\n18\t1\t14\n22\t6\t128\n8\t9\t230\n9\t4\t59\n19\t2\t64\n8\t3\t440\n12\t7\t50\n13\t8\t21\n20\t2\t52\n1\t7\t56\n11\t8\t19\n2\t3\t116\n4\t7\t32\n7\t1\t4\n11\t6\t51\n12\t2\t36\n1\t2\t4\n16\t2\t48\n13\t7\t79\n0\t7\t210\n11\t1\t11\n9\t1\t3\n6\t0\t203\n23\t0\t394\n16\t8\t16\n17\t7\t86\n4\t0\t121\n1\t9\t40\n13\t9\t152\n15\t1\t9\n0\t5\t90\n23\t2\t49\n5\t7\t40\n15\t5\t35\n5\t6\t40\n12\t1\t8\n16\t0\t948\n15\t6\t73\n6\t8\t13\n14\t3\t524\n16\t4\t42\n10\t5\t39\n1\t1\t6\n4\t9\t61\n6\t5\t45\n9\t7\t77\n1\t3\t299\n20\t3\t635\n11\t4\t49\n18\t9\t219\n19\t1\t15\n10\t6\t57\n3\t5\t19\n11\t7\t55\n21\t5\t58\n13\t5\t37\n15\t2\t45\n2\t5\t16\n15\t8\t11\n21\t6\t141\n0\t0\t427\n7\t2\t23\n17\t6\t124\n16\t9\t179\n1\t4\t9\n14\t2\t59\n18\t8\t18\n5\t4\t15\n12\t5\t33\n21\t3\t635\n23\t3\t759\n7\t9\t250\n2\t9\t30\n14\t4\t61\n21\t2\t45\n10\t4\t43\n19\t4\t128\n7\t3\t409\n10\t1\t5\n11\t5\t30\n3\t3\t110\n15\t7\t74\n23\t5\t69\n9\t3\t346\n1\t8\t13\n21\t4\t106\n9\t2\t17\n16\t7\t79\n17\t8\t20\n8\t5\t32\n11\t9\t123\n8\t1\t7\n17\t9\t197\n13\t4\t43\n0\t9\t128\n21\t7\t127\n22\t0\t661\n4\t3\t104\n6\t7\t74\n18\t6\t120\n2\t1\t1\n14\t6\t77\n8\t8\t21\n15\t9\t185\n2\t4\t7\n14\t0\t580\n11\t3\t322\n18\t5\t42\n4\t6\t16\n20\t5\t56\n21\t8\t32\n21\t0\t642\n6\t3\t280\n12\t0\t396\n13\t3\t412\n9\t8\t19\n19\t6\t101\n8\t7\t75\n12\t8\t11\n3\t6\t18\n8\t2\t23\n7\t5\t38\n13\t6\t94\n6\t2\t39\n16\t1\t14\n16\t6\t94\n9\t5\t36\n3\t9\t48\n10\t9\t144\n20\t8\t17\n23\t7\t176\n18\t0\t788\n12\t4\t39\n19\t7\t113\n0\t1\t10\n2\t0\t68\n11\t0\t377\n17\t4\t37\n21\t1\t14\n5\t8\t10\n18\t2\t56\n14\t9\t147\n20\t0\t611\n20\t7\t93\n18\t4\t75\n20\t1\t7\n12\t9\t119\n13\t0\t476\n23\t8\t22\n22\t7\t136\n23\t9\t111\n7\t8\t18\n8\t4\t33\n18\t7\t112\n13\t2\t41\n10\t3\t337\n5\t0\t146\n15\t4\t45\n0\t8\t19\n3\t2\t2\n1\t5\t30\n5\t2\t51\n15\t3\t599\n20\t9\t198\n5\t1\t2\n8\t0\t392\n14\t7\t59\n5\t3\t178\n9\t0\t370\n19\t9\t216\n20\t4\t105\n23\t4\t46\n19\t3\t686\n0\t6\t111\n9\t9\t139\n12\t6\t64\n18\t3\t727\n0\t2\t50\n7\t7\t78\n3\t8\t4\n23\t1\t12\n3\t4\t3\n4\t2\t27\n19\t5\t44\n22\t5\t67\n14\t1\t6\n4\t4\t10\n17\t5\t42\n21\t9\t179\n11\t2\t18\n2\t8\t6\n6\t6\t74\n8\t6\t62\n0\t3\t937\n10\t7\t59\n3\t0\t79\n20\t6\t120\n1\t6\t26\n9\t6\t70\n10\t0\t370\n4\t1\t6\n14\t5\t31\n3\t7\t27\n6\t9\t162\n13\t1\t18\n19\t0\t700\n0\t4\t31\n5\t9\t96\n16\t5\t36\n19\t8\t26\n2\t7\t24\n4\t8\t8\n12\t3\t301\n22\t2\t57\n17\t0\t849\n14\t8\t16\n4\t5\t19\n22\t4\t83\n5\t5\t18\n15\t0\t784\n7\t0\t347\n7\t6\t91\n22\t3\t838\n22\t1\t16\n6\t4\t19\n10\t8\t16\n2\t6\t11\n"}]},"apps":[],"jobName":"paragraph_1531351329056_790477635","id":"20180711-162209_475986403","dateCreated":"2018-07-11T16:22:09-0700","dateStarted":"2018-07-11T16:23:07-0700","dateFinished":"2018-07-11T16:23:07-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15545"},{"text":"%sql  select cid, count(cid) as count from uber group by cid","user":"anonymous","dateUpdated":"2018-07-11T16:23:22-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"cid\tcount\n1\t311\n6\t2910\n3\t15770\n5\t1545\n9\t5190\n4\t1632\n8\t679\n7\t2999\n2\t1261\n0\t14303\n"}]},"apps":[],"jobName":"paragraph_1530575209927_619188464","id":"20180702-164649_1043869606","dateCreated":"2018-07-02T16:46:49-0700","dateStarted":"2018-07-11T16:23:22-0700","dateFinished":"2018-07-11T16:23:23-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15546"},{"text":"%sql SELECT hour(uber.dt) as hr,count(cid) as ct FROM uber group By hour(uber.dt)","user":"anonymous","dateUpdated":"2018-07-11T16:23:26-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"hr\tct\n12\t2090\n22\t2191\n1\t1420\n13\t2454\n6\t1375\n16\t3765\n3\t839\n20\t1894\n5\t1009\n19\t2093\n15\t3451\n9\t1917\n17\t3917\n4\t805\n8\t2017\n23\t1766\n7\t1836\n10\t1931\n21\t1979\n11\t1988\n14\t2893\n2\t913\n0\t2013\n18\t3344\n"}]},"apps":[],"jobName":"paragraph_1530575806826_1682893290","id":"20180702-165646_164052550","dateCreated":"2018-07-02T16:56:46-0700","dateStarted":"2018-07-11T16:23:26-0700","dateFinished":"2018-07-11T16:23:27-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15547"},{"text":"%sql SELECT day(uber.dt) as day, cid, count(cid) as ct FROM uber group By day(uber.dt), cid\n","user":"anonymous","dateUpdated":"2018-07-11T16:23:31-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"day","index":0,"aggr":"sum"}],"groups":[{"name":"cid","index":1,"aggr":"sum"}],"values":[{"name":"ct","index":2,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"day\tcid\tct\n1\t0\t10599\n2\t2\t594\n1\t7\t1834\n2\t3\t7366\n1\t2\t835\n1\t9\t3429\n1\t1\t206\n1\t3\t10691\n2\t5\t926\n1\t4\t1100\n2\t9\t2625\n1\t8\t398\n2\t1\t142\n2\t4\t759\n2\t0\t5703\n1\t5\t896\n2\t8\t405\n1\t6\t1814\n2\t7\t1786\n2\t6\t1692\n"}]},"apps":[],"jobName":"paragraph_1530650269802_192028608","id":"20180703-133749_833187486","dateCreated":"2018-07-03T13:37:49-0700","dateStarted":"2018-07-11T16:23:31-0700","dateFinished":"2018-07-11T16:23:32-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15548"},{"text":"%sql SELECT base, cid, count(cid) as ct FROM uber group By base, cid","user":"anonymous","dateUpdated":"2018-07-11T16:23:37-0700","config":{"colWidth":12,"enabled":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"cid","index":1,"aggr":"sum"}],"groups":[{"name":"base","index":0,"aggr":"sum"}],"values":[{"name":"ct","index":2,"aggr":"sum"}]},"helium":{}}},"editorSetting":{"language":"sql"},"editorMode":"ace/mode/sql"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"base\tcid\tct\nB02682\t7\t988\nB02617\t5\t931\nB02598\t6\t1192\nB02764\t6\t41\nB02682\t2\t360\nB02764\t0\t211\nB02617\t2\t666\nB02682\t1\t63\nB02764\t4\t28\nB02764\t1\t8\nB02512\t0\t775\nB02598\t8\t275\nB02512\t6\t93\nB02512\t3\t834\nB02682\t4\t424\nB02764\t8\t9\nB02617\t7\t1747\nB02512\t2\t58\nB02617\t8\t369\nB02512\t1\t43\nB02512\t9\t254\nB02764\t7\t53\nB02512\t8\t10\nB02598\t5\t539\nB02617\t6\t1677\nB02512\t5\t32\nB02682\t6\t863\nB02598\t7\t1170\nB02764\t3\t215\nB02598\t9\t1838\nB02617\t1\t154\nB02617\t0\t7636\nB02764\t5\t26\nB02512\t4\t81\nB02617\t9\t2846\nB02682\t9\t1488\nB02682\t0\t3780\nB02512\t7\t83\nB02682\t3\t4499\nB02598\t4\t528\nB02598\t3\t5684\nB02682\t5\t459\nB02598\t2\t435\nB02617\t4\t925\nB02764\t2\t23\nB02598\t0\t5110\nB02682\t8\t217\nB02764\t9\t77\nB02617\t3\t8592\nB02598\t1\t91\n"}]},"apps":[],"jobName":"paragraph_1530650342609_-332076014","id":"20180703-133902_1691437154","dateCreated":"2018-07-03T13:39:02-0700","dateStarted":"2018-07-11T16:23:37-0700","dateFinished":"2018-07-11T16:23:38-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15549"},{"text":"streamingquery.stop()\n","user":"anonymous","dateUpdated":"2018-07-11T16:23:42-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1530575298396_175881110","id":"20180702-164818_524483900","dateCreated":"2018-07-02T16:48:18-0700","dateStarted":"2018-07-11T16:23:42-0700","dateFinished":"2018-07-11T16:23:43-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15550"},{"text":"import com.mapr.db.spark.impl._\nimport com.mapr.db.spark.streaming._\nimport com.mapr.db.spark.sql._\nimport com.mapr.db.spark.streaming.MapRDBSourceConfig\n\nvar tableName: String = \"/apps/ubertable\"\nval writedb = cdf.writeStream\n   .format(MapRDBSourceConfig.Format)\n   .option(MapRDBSourceConfig.TablePathOption, tableName)\n   .option(MapRDBSourceConfig.IdFieldPathOption, \"_id\")\n   .option(MapRDBSourceConfig.CreateTableOption, false)\n   .option(\"checkpointLocation\", \"/tmp/uberdb\")\n   .option(MapRDBSourceConfig.BulkModeOption, true)\n   .option(MapRDBSourceConfig.SampleSizeOption, 1000)\n\nwritedb.start()\n   ","user":"anonymous","dateUpdated":"2018-07-11T16:53:17-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import com.mapr.db.spark.impl._\nimport com.mapr.db.spark.streaming._\nimport com.mapr.db.spark.sql._\nimport com.mapr.db.spark.streaming.MapRDBSourceConfig\ntableName: String = /apps/ubertable\nwritedb: org.apache.spark.sql.streaming.DataStreamWriter[UberwId] = org.apache.spark.sql.streaming.DataStreamWriter@3a35f727\n"}]},"apps":[],"jobName":"paragraph_1530576286376_1149886369","id":"20180702-170446_1522571339","dateCreated":"2018-07-02T17:04:46-0700","dateStarted":"2018-07-10T13:11:59-0700","dateFinished":"2018-07-10T13:12:00-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15551"},{"text":"writedb.start()","user":"anonymous","dateUpdated":"2018-07-10T13:12:06-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"res26: org.apache.spark.sql.streaming.StreamingQuery = org.apache.spark.sql.execution.streaming.StreamingQueryWrapper@5f56e9a6\n"}]},"apps":[],"jobName":"paragraph_1531177894206_-1168031088","id":"20180709-161134_1518899157","dateCreated":"2018-07-09T16:11:34-0700","dateStarted":"2018-07-10T13:12:06-0700","dateFinished":"2018-07-10T13:12:06-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15552"},{"text":"writedb.stop()","user":"anonymous","dateUpdated":"2018-07-10T13:03:53-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1530576725071_1877907908","id":"20180702-171205_691156739","dateCreated":"2018-07-02T17:12:05-0700","dateStarted":"2018-07-02T17:19:04-0700","dateFinished":"2018-07-02T17:19:04-0700","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:15553"},{"text":"// publish to a kafka topic\n val writek = cdf.selectExpr(\"CAST(base AS STRING) AS key\", \"CAST(lat AS STRING) AS value\").writeStream.format(\"kafka\")\n             .option(\"kafka.bootstrap.servers\",\"localhost:9092\").option(\"topic\", \"/apps/uberstream:uberp\")\n             .option(\"checkpointLocation\", \"/tmp/nsparkcheckpoint/\").queryName(\"kafka2\").outputMode(\"update\").start()","dateUpdated":"2018-07-10T12:46:07-0700","config":{"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1530574473858_45299112","id":"20180614-133413_1254318878","dateCreated":"2018-07-02T16:34:33-0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15554"},{"text":"writek.stop()","user":"anonymous","dateUpdated":"2018-07-10T12:46:55-0700","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1531251998667_-1300403462","id":"20180710-124638_1511312471","dateCreated":"2018-07-10T12:46:38-0700","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:15555"},{"dateUpdated":"2018-07-02T16:34:33-0700","config":{"tableHide":false,"editorSetting":{"language":"scala"},"colWidth":12,"editorMode":"ace/mode/scala","editorHide":false,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1530574473858_45299112","id":"20171003-225856_937234821","dateCreated":"2018-07-02T16:34:33-0700","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:15556"}],"name":"SparkUberStructuredStreaming","id":"2DJ88APXB","angularObjects":{"2D1RDNPG7:shared_process":[],"2CZY6RGGW:shared_process":[],"2D1X9BGYQ:shared_process":[],"2D23NTXKZ:shared_process":[],"2D17U7MQZ:shared_process":[],"2D1G7DFJ3:shared_process":[],"2D1N6AW6W:shared_process":[],"2D2AEVMHC:shared_process":[],"2D11UYDEH:shared_process":[],"2D1AEZYWW:shared_process":[],"2D4B74HZR:shared_process":[],"2CZVDCKWE:shared_process":[],"2D2SQCKKS:shared_process":[],"2D11WSKEQ:shared_process":[],"2D2CKFTGH:shared_process":[],"2D3PPPREV:shared_process":[],"2D3TRC9QZ:shared_process":[],"2D1HQ6WB4:shared_process":[],"2D1NT65H6:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}