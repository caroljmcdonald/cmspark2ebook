{"paragraphs":[{"title":"Import needed packages","text":"%livy\nimport org.apache.spark._\nimport org.apache.spark.ml._\nimport org.apache.spark.ml.feature._\nimport org.apache.spark.ml.classification._\nimport org.apache.spark.ml.evaluation._\nimport org.apache.spark.ml.tuning._\nimport org.apache.spark.sql._\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types._\n\n","user":"mapr","dateUpdated":"2018-10-16T16:59:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.sql.types._"}]},"apps":[],"jobName":"paragraph_1538598418060_-708950296","id":"20170508-144514_403247535","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T16:59:32+0000","dateFinished":"2018-10-16T16:59:35+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:278"},{"text":"%sh \nls /public_data/demos_flightdelay\nhadoop fs -ls /user/mapr/\nhadoop fs -mkdir /user/mapr/data\nhadoop fs -put /public_data/demos_flightdelay/*json /user/mapr/data/.\nhadoop fs -ls /user/mapr/data","user":"mapr","dateUpdated":"2018-10-15T20:53:23+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh","editorHide":true,"tableHide":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"airports.json\nflights20170102.json\nSLF4J: Class path contains multiple SLF4J bindings.\nSLF4J: Found binding in [jar:file:/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: Found binding in [jar:file:/opt/mapr/lib/slf4j-log4j12-1.7.12.jar!/org/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\nFound 6 items\n-rwxr-xr-x   3 mapr mapr         14 2018-10-15 18:53 /user/mapr/.recent_tables\ndrwxr-xr-x   - mapr mapr          1 2018-10-15 19:39 /user/mapr/.sparkStaging\ndrwxr-xr-x   - mapr mapr          1 2018-10-15 18:52 /user/mapr/drill\ndrwxr-xr-x   - mapr root          1 2018-10-15 18:52 /user/mapr/dsr-demo\ntr--------   - mapr mapr          3 2018-10-15 18:53 /user/mapr/ps\ndrwxrwxrwx   - mapr mapr          1 2018-10-15 18:53 /user/mapr/tmp\nSLF4J: Class path contains multiple SLF4J bindings.\nSLF4J: Found binding in [jar:file:/opt/mapr/hadoop/hadoop-2.7.0/share/hadoop/common/lib/slf4j-log4j12-1.7.10.jar!/org/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: Found binding in [jar:file:/opt/mapr/lib/slf4j-log4j12-1.7.12.jar!/org/slf4j/impl/StaticLoggerBinder.class]\nSLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.\nSLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]\n"}]},"apps":[],"jobName":"paragraph_1538601656440_-1717330143","id":"20181003-212056_1014503768","dateCreated":"2018-10-03T21:20:56+0000","dateStarted":"2018-10-15T19:46:18+0000","dateFinished":"2018-10-15T19:46:20+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:279"},{"text":"%md \nFor this tutorial, we'll be using data from http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time.\nThe CSV data has been cleaned and tranformed into 2 JSON files with the following format: \n{\"dofM\":1,\"dofW\":7,\"carrier\":\"AA\",\"fldate\":\"2017-01-01\",\"flnum\":\"1678\",\"origin\":\"ATL\",\"dest\":\"LGA\",\"crsdephour\":17,\"crsdeptime\":1700,\"depdelay\":0.0,\"crsarrtime\":1912,\"arrdelay\":0.0,\"crselapsedtime\":132.0,\"dist\":762.0}\n\nWe use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>For this tutorial, we&rsquo;ll be using data from <a href=\"http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time\">http://www.transtats.bts.gov/DL_SelectFields.asp?Table_ID=236&DB_Short_Name=On-Time</a>.<br/>The CSV data has been cleaned and tranformed into 2 JSON files with the following format:<br/>{&ldquo;dofM&rdquo;:1,&ldquo;dofW&rdquo;:7,&ldquo;carrier&rdquo;:&ldquo;AA&rdquo;,&ldquo;fldate&rdquo;:&ldquo;2017-01-01&rdquo;,&ldquo;flnum&rdquo;:&ldquo;1678&rdquo;,&ldquo;origin&rdquo;:&ldquo;ATL&rdquo;,&ldquo;dest&rdquo;:&ldquo;LGA&rdquo;,&ldquo;crsdephour&rdquo;:17,&ldquo;crsdeptime&rdquo;:1700,&ldquo;depdelay&rdquo;:0.0,&ldquo;crsarrtime&rdquo;:1912,&ldquo;arrdelay&rdquo;:0.0,&ldquo;crselapsedtime&rdquo;:132.0,&ldquo;dist&rdquo;:762.0}</p>\n<p>We use a Scala case class and Structype to define the schema, corresponding to a line in the JSON data file.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418063_-708565547","id":"20170530-122945_1594214131","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:280"},{"title":"Define Schema for JSON file data","text":"\ncase class Flight(_id: String, dofW: Integer, carrier: String, origin: String,\n    dest: String, crsdephour: Integer, crsdeptime: Double, depdelay: Double,\n    crsarrtime: Double, arrdelay: Double, crselapsedtime: Double, dist: Double)\n\n\nval schema = StructType(Array(\n    StructField(\"_id\", StringType, true),\n    StructField(\"dofW\", IntegerType, true),\n    StructField(\"carrier\", StringType, true),\n    StructField(\"origin\", StringType, true),\n    StructField(\"dest\", StringType, true),\n    StructField(\"crsdephour\", IntegerType, true),\n    StructField(\"crsdeptime\", DoubleType, true),\n    StructField(\"depdelay\", DoubleType, true),\n    StructField(\"crsarrtime\", DoubleType, true),\n    StructField(\"arrdelay\", DoubleType, true),\n    StructField(\"crselapsedtime\", DoubleType, true),\n    StructField(\"dist\", DoubleType, true)\n  ))\n   ","user":"mapr","dateUpdated":"2018-10-16T14:56:19+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"schema: org.apache.spark.sql.types.StructType = StructType(StructField(_id,StringType,true), StructField(dofW,IntegerType,true), StructField(carrier,StringType,true), StructField(origin,StringType,true), StructField(dest,StringType,true), StructField(crsdephour,IntegerType,true), StructField(crsdeptime,DoubleType,true), StructField(depdelay,DoubleType,true), StructField(crsarrtime,DoubleType,true), StructField(arrdelay,DoubleType,true), StructField(crselapsedtime,DoubleType,true), StructField(dist,DoubleType,true))"}]},"apps":[],"jobName":"paragraph_1538598418065_-698562076","id":"20170508-150032_326029627","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T14:56:19+0000","dateFinished":"2018-10-16T14:56:22+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:281"},{"title":"Read the data from JSON file into a Dataset of type Flight","text":"\nimport spark.implicits._\n\n var file =\"maprfs:///user/mapr/data/flights20170102.json\"\n\n val df: Dataset[Flight] = spark.read.format(\"json\").option(\"inferSchema\", \"false\").schema(schema).load(file).as[Flight]\n \n df.show\n","user":"mapr","dateUpdated":"2018-10-16T14:57:02+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+\n|                 _id|dofW|carrier|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime| dist|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        11|    1141.0|     0.0|    1409.0|     0.0|         148.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     WN|   ATL| BOS|        13|    1335.0|     0.0|    1600.0|     0.0|         145.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        14|    1416.0|     0.0|    1644.0|     0.0|         148.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        16|    1616.0|    15.0|    1849.0|     0.0|         153.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     WN|   ATL| BOS|        18|    1845.0|     0.0|    2110.0|     0.0|         145.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        19|    1905.0|    15.0|    2133.0|     0.0|         148.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        22|    2205.0|     0.0|      29.0|     0.0|         144.0|946.0|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|         9|     859.0|    30.0|    1127.0|    11.0|         148.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        10|    1004.0|    10.0|    1236.0|     3.0|         152.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        11|    1141.0|     0.0|    1410.0|    19.0|         149.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        13|    1305.0|    16.0|    1529.0|     5.0|         144.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        14|    1416.0|     0.0|    1646.0|     0.0|         150.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     WN|   ATL| BOS|        14|    1350.0|    25.0|    1615.0|    16.0|         145.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        15|    1510.0|    12.0|    1745.0|     4.0|         155.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        16|    1616.0|    68.0|    1852.0|    49.0|         156.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        18|    1750.0|    61.0|    2027.0|    64.0|         157.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        19|    1905.0|    36.0|    2135.0|    23.0|         150.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     WN|   ATL| BOS|        21|    2055.0|    74.0|    2325.0|    63.0|         150.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        22|    2205.0|    29.0|      32.0|    21.0|         147.0|946.0|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|         7|     725.0|     2.0|     954.0|     0.0|         149.0|946.0|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+\nonly showing top 20 rows"}]},"apps":[],"jobName":"paragraph_1538598418068_-699716322","id":"20170508-150131_378637203","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T14:57:02+0000","dateFinished":"2018-10-16T14:57:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:282"},{"title":"Add origin_dest column  and display the first 20 rows","text":"val df1 = df.withColumn(\"orig_dest\", concat($\"origin\",lit(\"_\"), $\"dest\"))\ndf1.show()\n\n","user":"mapr","dateUpdated":"2018-10-16T14:57:37+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+---------+\n|                 _id|dofW|carrier|origin|dest|crsdephour|crsdeptime|depdelay|crsarrtime|arrdelay|crselapsedtime| dist|orig_dest|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+---------+\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        11|    1141.0|     0.0|    1409.0|     0.0|         148.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     WN|   ATL| BOS|        13|    1335.0|     0.0|    1600.0|     0.0|         145.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        14|    1416.0|     0.0|    1644.0|     0.0|         148.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        16|    1616.0|    15.0|    1849.0|     0.0|         153.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     WN|   ATL| BOS|        18|    1845.0|     0.0|    2110.0|     0.0|         145.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        19|    1905.0|    15.0|    2133.0|     0.0|         148.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|        22|    2205.0|     0.0|      29.0|     0.0|         144.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   7|     DL|   ATL| BOS|         9|     859.0|    30.0|    1127.0|    11.0|         148.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        10|    1004.0|    10.0|    1236.0|     3.0|         152.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        11|    1141.0|     0.0|    1410.0|    19.0|         149.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        13|    1305.0|    16.0|    1529.0|     5.0|         144.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        14|    1416.0|     0.0|    1646.0|     0.0|         150.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     WN|   ATL| BOS|        14|    1350.0|    25.0|    1615.0|    16.0|         145.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        15|    1510.0|    12.0|    1745.0|     4.0|         155.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        16|    1616.0|    68.0|    1852.0|    49.0|         156.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        18|    1750.0|    61.0|    2027.0|    64.0|         157.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        19|    1905.0|    36.0|    2135.0|    23.0|         150.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     WN|   ATL| BOS|        21|    2055.0|    74.0|    2325.0|    63.0|         150.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|        22|    2205.0|    29.0|      32.0|    21.0|         147.0|946.0|  ATL_BOS|\n|ATL_BOS_2017-01-0...|   1|     DL|   ATL| BOS|         7|     725.0|     2.0|     954.0|     0.0|         149.0|946.0|  ATL_BOS|\n+--------------------+----+-------+------+----+----------+----------+--------+----------+--------+--------------+-----+---------+\nonly showing top 20 rows"}]},"apps":[],"jobName":"paragraph_1538598418069_-700101071","id":"20171129-221736_959969733","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T14:57:37+0000","dateFinished":"2018-10-16T14:57:39+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:283"},{"title":"Print DataFrame Schema","text":"df1.printSchema","user":"mapr","dateUpdated":"2018-10-16T14:58:04+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- _id: string (nullable = true)\n |-- dofW: integer (nullable = true)\n |-- carrier: string (nullable = true)\n |-- origin: string (nullable = true)\n |-- dest: string (nullable = true)\n |-- crsdephour: integer (nullable = true)\n |-- crsdeptime: double (nullable = true)\n |-- depdelay: double (nullable = true)\n |-- crsarrtime: double (nullable = true)\n |-- arrdelay: double (nullable = true)\n |-- crselapsedtime: double (nullable = true)\n |-- dist: double (nullable = true)\n |-- orig_dest: string (nullable = true)"}]},"apps":[],"jobName":"paragraph_1538598418072_-701255318","id":"20171129-223643_463511351","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T14:58:04+0000","dateFinished":"2018-10-16T14:58:05+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:284"},{"text":"df1.select($\"orig_dest\", $\"depdelay\").filter($\"depdelay\" > 40).groupBy(\"orig_dest\").count.orderBy(desc(\"count\" )).show(5)","user":"mapr","dateUpdated":"2018-10-16T14:58:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+---------+-----+\n|orig_dest|count|\n+---------+-----+\n|  DEN_SFO|  172|\n|  ORD_SFO|  168|\n|  ATL_LGA|  155|\n|  ATL_EWR|  141|\n|  SFO_DEN|  134|\n+---------+-----+\nonly showing top 5 rows"}]},"apps":[],"jobName":"paragraph_1538685500031_271188767","id":"20181004-203820_2143689992","dateCreated":"2018-10-04T20:38:20+0000","dateStarted":"2018-10-16T14:58:14+0000","dateFinished":"2018-10-16T14:58:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:285"},{"text":"%md\nThe describe() function performs summary statistics calculations on  numeric columns ","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The describe() function performs summary statistics calculations on numeric columns</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418077_-703179062","id":"20170524-214640_973339640","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:287"},{"title":"Perform summary statistics  on selected columns","text":"\ndf1.describe(\"dist\", \"crselapsedtime\",\"depdelay\", \"arrdelay\").show","user":"mapr","dateUpdated":"2018-10-16T15:00:32+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------------------+------------------+------------------+------------------+\n|summary|              dist|    crselapsedtime|          depdelay|          arrdelay|\n+-------+------------------+------------------+------------------+------------------+\n|  count|             41348|             41348|             41348|             41348|\n|   mean|1111.0529167069749|186.26264873754474|15.018719164167553|14.806907226468027|\n| stddev| 568.7941212507534| 68.38149648990007|44.529632044361364| 44.22370513266619|\n|    min|             184.0|              64.0|               0.0|               0.0|\n|    max|            2704.0|             423.0|            1440.0|            1442.0|\n+-------+------------------+------------------+------------------+------------------+"}]},"apps":[],"jobName":"paragraph_1538598418078_-702024816","id":"20170524-083228_1459810795","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:00:32+0000","dateFinished":"2018-10-16T15:00:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:288"},{"title":"Add Column for Delayed Flights and count","text":"// >= 40 minutes = delayed\nval delaybucketizer = new Bucketizer().setInputCol(\"depdelay\").setOutputCol(\"delayed\").setSplits(Array(0.0,40.0,Double.PositiveInfinity))\nval df2= delaybucketizer.transform(df1)\ndf2.cache\ndf2.groupBy(\"delayed\").count.show","user":"mapr","dateUpdated":"2018-10-16T15:00:39+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0|36790|\n|    1.0| 4558|\n+-------+-----+"}]},"apps":[],"jobName":"paragraph_1538598418101_-712413036","id":"20170524-093402_1430077788","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:00:39+0000","dateFinished":"2018-10-16T15:00:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:302","focus":true},{"title":"Register Dataset as a Temporary View in order to explore with SQL","text":"df2.createOrReplaceTempView(\"flights\")\nspark.catalog.cacheTable(\"flights\")","user":"mapr","dateUpdated":"2018-10-16T15:01:08+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":true,"setting":{"stackedAreaChart":{}},"commonSetting":{},"keys":[{"name":"churn","index":19,"aggr":"sum"}],"groups":[],"values":[{"name":"len","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538598418075_-700870569","id":"20170508-150408_505244914","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:01:08+0000","dateFinished":"2018-10-16T15:01:10+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:286","focus":true},{"text":"%md \nUse Spark SQL to explore the dataset","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Use Spark SQL to explore the dataset</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418081_-717030023","id":"20170603-182655_1680505289","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:289"},{"title":"Top 5 Longest departure delays","text":"%sql \nselect carrier,origin, dest, depdelay,crsdephour, dist, dofW\nfrom flights \norder by depdelay desc limit 5 \n","user":"mapr","dateUpdated":"2018-10-16T15:01:14+0000","config":{"tableHide":false,"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","editorHide":false,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\torigin\tdest\tdepdelay\tcrsdephour\tdist\tdofW\nAA\tSFO\tORD\t1440.0\t8\t1846.0\t3\nDL\tBOS\tATL\t1185.0\t17\t946.0\t6\nUA\tDEN\tEWR\t1138.0\t12\t1605.0\t4\nDL\tORD\tATL\t1087.0\t19\t606.0\t7\nUA\tMIA\tEWR\t1072.0\t20\t1085.0\t1"}]},"apps":[],"jobName":"paragraph_1538598418083_-716260525","id":"20171110-195321_1924356975","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:01:14+0000","dateFinished":"2018-10-16T15:01:16+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:290"},{"title":"Average Departure Delay by Carrier","text":"%sql select carrier, avg(depdelay)\nfrom flights\ngroup by carrier","user":"mapr","dateUpdated":"2018-10-16T15:01:24+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tavg(depdelay)\nUA\t17.477878450696764\nAA\t10.45768118831622\nDL\t15.316061660865241\nWN\t13.491000418585182"}]},"apps":[],"jobName":"paragraph_1538598418085_-718569018","id":"20171110-195759_439800395","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:01:24+0000","dateFinished":"2018-10-16T15:01:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:291"},{"title":"Maximum Departure Delay by Carrier","text":"%sql\nselect carrier, max(depdelay)\nfrom flights\ngroup by carrier","user":"mapr","dateUpdated":"2018-10-16T15:01:32+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tmax(depdelay)\nUA\t1138.0\nAA\t1440.0\nDL\t1185.0\nWN\t375.0"}]},"apps":[],"jobName":"paragraph_1538598418086_-717414772","id":"20171129-194230_774307118","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:01:32+0000","dateFinished":"2018-10-16T15:01:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:292"},{"title":"Average Departure Delay by Destination","text":"%sql\nSELECT dest, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dest\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2018-10-15T20:36:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dest\tavgdelay\nSFO\t25.12807752750131\nEWR\t20.27488714659064\nLGA\t14.455166867712103\nATL\t13.588656021290753\nORD\t13.525756600128783\nDEN\t12.728005691249704\nIAH\t12.658908507223114\nBOS\t12.395548404397962\nMIA\t12.364271232259519"}]},"apps":[],"jobName":"paragraph_1538598418098_-709719794","id":"20171122-204956_303346727","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T20:36:59+0000","dateFinished":"2018-10-15T20:37:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:300","focus":true},{"title":"Average Departure Delay by Origin","text":"%sql\nSELECT origin, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY origin\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2018-10-15T20:36:14+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tavgdelay\nSFO\t20.306176084099867\nEWR\t16.31737378525717\nDEN\t16.167720777699696\nIAH\t15.925946093111898\nORD\t14.880476190476191\nATL\t14.699547814436443\nMIA\t14.068474576271186\nBOS\t12.440173253925284\nLGA\t11.547475961538462"}]},"apps":[],"jobName":"paragraph_1538598418097_-710874040","id":"20171122-204822_1853914961","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T20:35:53+0000","dateFinished":"2018-10-15T20:35:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:299","focus":true},{"title":"Average Departure Delay by Day of the Week","text":"%sql\nSELECT dofW, avg(depdelay) as avgdelay\nFROM flights \nGROUP BY dofW\nORDER BY avgdelay desc","user":"mapr","dateUpdated":"2018-10-15T20:38:15+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tavgdelay\n7\t18.75420240137221\n1\t17.404697121580984\n6\t16.829883897021706\n4\t14.609846568875401\n2\t13.50552611657835\n5\t13.10193236714976\n3\t11.3646816543676"}]},"apps":[],"jobName":"paragraph_1538598418100_-712028287","id":"20171122-205057_803943925","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-04T20:41:05+0000","dateFinished":"2018-10-04T20:41:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:301","focus":true},{"title":"Count of Departure Delays by Day of the Week (1=Monday, 7=Sunday)","text":"%sql\nselect dofW, count(depdelay)\nfrom flights where depdelay > 40\ngroup by dofW\n","user":"mapr","dateUpdated":"2018-10-16T15:01:57+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dofW\tcount(depdelay)\n1\t940\n6\t424\n3\t482\n5\t579\n4\t626\n7\t701\n2\t712"}]},"apps":[],"jobName":"paragraph_1538598418089_-720108014","id":"20171123-101016_2040441762","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:01:58+0000","dateFinished":"2018-10-16T15:02:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:294","focus":true},{"title":"Count of Departure Delays by Carrier (where delay=40 minutes)","text":"%sql\nselect carrier, count(delayed)\nfrom flights where delayed = 1\ngroup by carrier\norder by carrier","user":"mapr","dateUpdated":"2018-10-16T15:17:42+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"carrier\tcount(delayed)\nAA\t783\nDL\t1065\nUA\t2458\nWN\t252"}]},"apps":[],"jobName":"paragraph_1538598418088_-719723265","id":"20171123-042011_1532799341","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:17:42+0000","dateFinished":"2018-10-16T15:17:44+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:293","focus":true},{"title":"Count of Delayed Not Delayed  by Carrier","text":"%sql\nSELECT delayed, count(delayed),carrier\nFROM flights\nGROUP BY carrier, delayed\norder by carrier\n","user":"mapr","dateUpdated":"2018-10-16T15:14:20+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"carrier","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tcarrier\n1.0\t783\tAA\n0.0\t9248\tAA\n1.0\t1065\tDL\n0.0\t8990\tDL\n0.0\t16415\tUA\n1.0\t2458\tUA\n1.0\t252\tWN\n0.0\t2137\tWN"}]},"apps":[],"jobName":"paragraph_1538598418108_-715106278","id":"20170524-144751_554129160","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:12:07+0000","dateFinished":"2018-10-16T15:12:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:306","focus":true},{"title":"Count of Departure Delays by Hour of Day","text":"%sql\nselect crsdephour, count(depdelay)\nfrom flights where depdelay > 40\ngroup by crsdephour\n","user":"mapr","dateUpdated":"2018-10-15T20:34:32+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"crsdephour\tcount(depdelay)\n12\t227\n22\t65\n1\t1\n13\t336\n16\t351\n6\t68\n20\t230\n5\t15\n19\t371\n15\t331\n9\t175\n17\t474\n8\t190\n23\t27\n7\t112\n10\t284\n24\t9\n21\t160\n11\t280\n14\t353\n0\t9\n18\t396"}]},"apps":[],"jobName":"paragraph_1538598418091_-719338516","id":"20171129-200107_756396508","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T20:34:32+0000","dateFinished":"2018-10-15T20:34:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:295"},{"title":"Count of Delayed , Not Delayed by Hour","text":"%sql\nSELECT delayed, count(delayed),crsdephour\nFROM flights\nGROUP BY crsdephour, delayed\norder by delayed","user":"mapr","dateUpdated":"2018-10-16T15:04:58+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"crsdephour","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tcrsdephour\n0.0\t1756\t19\n0.0\t170\t23\n0.0\t99\t0\n0.0\t531\t22\n0.0\t2019\t12\n0.0\t2648\t8\n0.0\t2674\t10\n0.0\t1352\t20\n0.0\t2165\t14\n0.0\t2376\t13\n0.0\t918\t21\n0.0\t3265\t7\n0.0\t2400\t11\n0.0\t1891\t18\n0.0\t160\t24\n0.0\t2263\t6\n0.0\t2204\t9\n0.0\t2\t2\n0.0\t2100\t16\n0.0\t31\t1\n0.0\t2250\t15\n0.0\t640\t5\n0.0\t2876\t17\n1.0\t179\t9\n1.0\t380\t19\n1.0\t237\t12\n1.0\t164\t21\n1.0\t27\t23\n1.0\t234\t20\n1.0\t285\t11\n1.0\t1\t1\n1.0\t345\t13\n1.0\t484\t17\n1.0\t406\t18\n1.0\t193\t8\n1.0\t358\t14\n1.0\t115\t7\n1.0\t355\t16\n1.0\t72\t6\n1.0\t336\t15\n1.0\t9\t24\n1.0\t15\t5\n1.0\t66\t22\n1.0\t9\t0\n1.0\t288\t10"}]},"apps":[],"jobName":"paragraph_1538598418105_-713952032","id":"20170524-095127_757444423","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:04:11+0000","dateFinished":"2018-10-16T15:04:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:305","focus":true},{"title":"Count of Departure Delays by Origin","text":"%sql\nselect origin, count(depdelay)\nfrom flights where depdelay > 40\ngroup by origin\nORDER BY origin","user":"mapr","dateUpdated":"2018-10-16T15:19:50+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tcount(depdelay)\nATL\t637\nBOS\t296\nDEN\t484\nEWR\t518\nIAH\t447\nLGA\t432\nMIA\t429\nORD\t679\nSFO\t542"}]},"apps":[],"jobName":"paragraph_1538598418092_-721262261","id":"20171123-101839_1671246939","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:19:50+0000","dateFinished":"2018-10-16T15:19:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:296","focus":true},{"title":"Count of Departure Delays by Origin","text":"%sql\nSELECT delayed, count(delayed),origin\nFROM flights\nGROUP BY origin, delayed\norder by origin\n","user":"mapr","dateUpdated":"2018-10-16T15:20:02+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"pieChart":{},"multiBarChart":{"stacked":false}},"commonSetting":{},"keys":[{"name":"origin","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\torigin\n1.0\t649\tATL\n0.0\t5322\tATL\n1.0\t306\tBOS\n0.0\t3388\tBOS\n0.0\t3773\tDEN\n1.0\t496\tDEN\n1.0\t526\tEWR\n0.0\t3693\tEWR\n0.0\t3218\tIAH\n1.0\t455\tIAH\n1.0\t442\tLGA\n0.0\t4550\tLGA\n1.0\t434\tMIA\n0.0\t3991\tMIA\n1.0\t693\tORD\n0.0\t5607\tORD\n1.0\t557\tSFO\n0.0\t3248\tSFO"}]},"apps":[],"jobName":"paragraph_1538598418109_-715491027","id":"20171110-211045_792848918","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:20:02+0000","dateFinished":"2018-10-16T15:20:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:307","focus":true},{"title":"Count of Departure Delays by Destination","text":"%sql\nselect dest, count(delayed)\nfrom flights where delayed = 1\ngroup by dest\nORDER BY dest\n","user":"mapr","dateUpdated":"2018-10-16T15:21:23+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"dest\tcount(delayed)\nATL\t557\nBOS\t351\nDEN\t411\nEWR\t631\nIAH\t338\nLGA\t545\nMIA\t392\nORD\t613\nSFO\t720"}]},"apps":[],"jobName":"paragraph_1538598418094_-720492763","id":"20171123-102221_687729087","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:21:23+0000","dateFinished":"2018-10-16T15:21:25+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:297"},{"title":"Count of Delayed not Delayed by Destination","text":"%sql\nSELECT delayed, count(delayed),dest\nFROM flights\nGROUP BY dest, delayed\norder by dest","user":"mapr","dateUpdated":"2018-10-16T15:22:01+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"dest","index":2,"aggr":"sum"}],"groups":[{"name":"delayed","index":0,"aggr":"sum"}],"values":[{"name":"count(delayed)","index":1,"aggr":"sum"}]},"helium":{}}},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false},"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"delayed\tcount(delayed)\tdest\n1.0\t557\tATL\n0.0\t5455\tATL\n1.0\t351\tBOS\n0.0\t3378\tBOS\n0.0\t3806\tDEN\n1.0\t411\tDEN\n1.0\t631\tEWR\n0.0\t3578\tEWR\n0.0\t3400\tIAH\n1.0\t338\tIAH\n1.0\t545\tLGA\n0.0\t4429\tLGA\n1.0\t392\tMIA\n0.0\t4047\tMIA\n1.0\t613\tORD\n0.0\t5599\tORD\n1.0\t720\tSFO\n0.0\t3098\tSFO"}]},"apps":[],"jobName":"paragraph_1538598418110_-714336781","id":"20171122-211508_2036968500","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:22:02+0000","dateFinished":"2018-10-16T15:22:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:308","focus":true},{"title":"Count of Departure Delays by Origin, Destination","text":"%sql\nselect origin, dest, count(depdelay)\nfrom flights where depdelay > 40\ngroup by origin, dest\nORDER BY count(depdelay) desc\n","user":"mapr","dateUpdated":"2018-10-16T15:22:48+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"setting":{"multiBarChart":{}},"commonSetting":{},"keys":[{"name":"origin","index":0,"aggr":"sum"}],"groups":[{"name":"dest","index":1,"aggr":"sum"}],"values":[{"name":"count(depdelay)","index":2,"aggr":"sum"}]},"helium":{}}},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TABLE","data":"origin\tdest\tcount(depdelay)\nDEN\tSFO\t172\nORD\tSFO\t168\nATL\tLGA\t155\nATL\tEWR\t141\nSFO\tDEN\t134\nLGA\tATL\t130\nORD\tEWR\t122\nSFO\tORD\t118\nEWR\tORD\t115\nORD\tLGA\t100\nIAH\tSFO\t98\nIAH\tEWR\t94\nMIA\tLGA\t92\nLGA\tORD\t88\nORD\tATL\t88\nATL\tSFO\t87\nLGA\tMIA\t81\nSFO\tEWR\t79\nEWR\tSFO\t77\nORD\tDEN\t76\nEWR\tATL\t76\nEWR\tIAH\t75\nATL\tORD\t74\nDEN\tEWR\t73\nEWR\tMIA\t69\nEWR\tBOS\t67\nLGA\tBOS\t67\nDEN\tLGA\t67\nATL\tMIA\t66\nMIA\tEWR\t66\nMIA\tATL\t64\nBOS\tLGA\t62\nSFO\tIAH\t62\nIAH\tLGA\t59\nSFO\tATL\t59\nDEN\tORD\t57\nMIA\tSFO\t57\nIAH\tMIA\t57\nMIA\tIAH\t55\nDEN\tATL\t54\nBOS\tSFO\t52\nSFO\tBOS\t52\nMIA\tORD\t50\nBOS\tATL\t49\nIAH\tORD\t48\nIAH\tDEN\t46\nORD\tBOS\t46\nATL\tBOS\t46\nBOS\tEWR\t45\nATL\tDEN\t43\nORD\tMIA\t43\nBOS\tORD\t43\nDEN\tIAH\t39\nEWR\tDEN\t39\nSFO\tMIA\t38\nORD\tIAH\t36\nLGA\tDEN\t35\nMIA\tBOS\t32\nLGA\tIAH\t31\nIAH\tATL\t27\nATL\tIAH\t25\nBOS\tMIA\t24\nIAH\tBOS\t18\nDEN\tBOS\t15\nMIA\tDEN\t13\nBOS\tDEN\t11\nBOS\tIAH\t10\nDEN\tMIA\t7"}]},"apps":[],"jobName":"paragraph_1538598418095_-720877512","id":"20171123-102627_1669385618","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:22:48+0000","dateFinished":"2018-10-16T15:22:50+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:298"},{"title":"Stratify the sampling to fewer Not Delayed","text":"val testData = df2\n// keep all delayed , keep 13% not delayed\nval fractions = Map(0.0 -> .13, 1.0->1.0) // \nval trainingData =df2.stat.sampleBy(\"delayed\", fractions, 36L)\n\n\ntrainingData.createOrReplaceTempView(\"flights\")\ntrainingData.groupBy(\"delayed\").count.show\n","user":"mapr","dateUpdated":"2018-10-16T15:23:09+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-----+\n|delayed|count|\n+-------+-----+\n|    0.0| 4758|\n|    1.0| 4558|\n+-------+-----+"}]},"apps":[],"jobName":"paragraph_1538598418104_-713567283","id":"20171123-050717_1328190278","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-16T15:23:09+0000","dateFinished":"2018-10-16T15:23:13+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:303","focus":true},{"text":"%md\nIn order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature. Use a StringIndexer to convert the categorical variables in the dataset into numeric variables\n","user":"mapr","dateUpdated":"2018-10-15T20:48:24+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>In order for the features to be used by a machine learning algorithm, they are transformed into numbers representing the value for each feature. Use a StringIndexer to convert the categorical variables in the dataset into numeric variables</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418113_-729341988","id":"20170603-184811_78732818","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T20:48:24+0000","dateFinished":"2018-10-15T20:48:26+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:309"},{"title":"Use a StringIndexer  to encode categorical columns","text":"// categorical Column names\nval categoricalColumns = Array(\"carrier\", \"origin\", \"dest\", \"dofW\", \"orig_dest\")\n\n// String Indexers will encode string categorial columns into a column numeric indices\nval stringIndexers = categoricalColumns.map { colName =>\n      new StringIndexer()\n        .setInputCol(colName)\n        .setOutputCol(colName + \"Indexed\")\n        .fit(trainingData)\n}\n\n","user":"mapr","dateUpdated":"2018-10-15T22:36:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"stringIndexers: Array[org.apache.spark.ml.feature.StringIndexerModel] = Array(strIdx_b63bac9c29f5, strIdx_660b6d9463ea, strIdx_f468c7c8e967, strIdx_ca5c58d1af8d, strIdx_ab76f3a0c4c1)"}]},"apps":[],"jobName":"paragraph_1538598418114_-728187741","id":"20170508-150543_958647761","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:36:46+0000","dateFinished":"2018-10-15T22:36:49+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:310"},{"title":"Use VectorAssembler, a transformer,  to put features into a feature vector column","text":"//bucket the dataset into delayed and not delayed flights with a label 0/1 column \nval labeler = new Bucketizer().setInputCol(\"depdelay\").setOutputCol(\"label\").setSplits(Array( 0.0, 40.0, Double.PositiveInfinity))\n\nval featureCols = Array(\"carrierIndexed\", \"destIndexed\", \"originIndexed\", \"dofWIndexed\", \"orig_destIndexed\",\"crsdephour\", \"crsdeptime\", \"crsarrtime\",\"crselapsedtime\", \"dist\")\n\n//put features into a feature vector column   \nval assembler = new VectorAssembler().setInputCols(featureCols).setOutputCol(\"features\")\n","user":"mapr","dateUpdated":"2018-10-15T22:36:55+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"assembler: org.apache.spark.ml.feature.VectorAssembler = vecAssembler_130ed431d600"}]},"apps":[],"jobName":"paragraph_1538598418115_-728572490","id":"20170524-223310_2121058884","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:36:55+0000","dateFinished":"2018-10-15T22:36:57+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:311"},{"title":"Create Random Forest Estimator , set Label and Feature Columns ","text":"val rf = new RandomForestClassifier().setLabelCol(\"label\").setFeaturesCol(\"features\")     ","user":"mapr","dateUpdated":"2018-10-15T22:37:01+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"rf: org.apache.spark.ml.classification.RandomForestClassifier = rfc_214f852f0ba5"}]},"apps":[],"jobName":"paragraph_1538598418116_-730496234","id":"20170603-185445_276463997","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:37:01+0000","dateFinished":"2018-10-15T22:37:02+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:312"},{"text":"%md\nSet up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model \n\n","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Set up a pipeline to pass the data through transformers to extract the features and label and pass this to a decision tree estimator to fit the model</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418117_-730880983","id":"20170601-154525_1033166149","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:313"},{"title":"Set up pipeline with  feature transformers and model estimator","text":"val steps = stringIndexers ++ Array(labeler, assembler, rf)\nval pipeline = new Pipeline().setStages(steps)\n","user":"mapr","dateUpdated":"2018-10-15T22:37:07+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pipeline: org.apache.spark.ml.Pipeline = pipeline_3314c155d89a"}]},"apps":[],"jobName":"paragraph_1538598418119_-730111485","id":"20170508-151557_1422077156","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:37:07+0000","dateFinished":"2018-10-15T22:37:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:314"},{"text":"%md\r\nSpark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.\r\n","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Spark ML supports k-fold cross validation with a transformation/estimation pipeline to try out different combinations of parameters, using a process called grid search. You set up a CrossValidator with the parameters to test, an estimator and evaluator for a model selection workflow.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418120_-732035230","id":"20170531-154658_1298817002","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:315"},{"title":"Set up a CrossValidator with the parameters, a tree estimator and evaluator","text":"// set param grid to Search through RF parameters for best model\n// Deeper trees are potentially more accurate, but are also more likely to overfit.\n\nval paramGrid = new ParamGridBuilder().addGrid(rf.maxBins, Array(100, 200)).addGrid(rf.maxDepth, Array(2, 4, 10)).addGrid(rf.numTrees, Array(5, 20)).addGrid(rf.impurity, Array(\"entropy\", \"gini\")).build()\n \nval evaluator = new BinaryClassificationEvaluator()  \n\n// Set up 3-fold cross validation with paramGrid\nval crossvalidator = new CrossValidator().setEstimator(pipeline).setEvaluator (evaluator).setEstimatorParamMaps(paramGrid).setNumFolds(3)","user":"mapr","dateUpdated":"2018-10-16T15:23:34+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"crossvalidator: org.apache.spark.ml.tuning.CrossValidator = cv_9dbfa572e967"}]},"apps":[],"jobName":"paragraph_1538598418121_-732419979","id":"20170508-151903_1365343172","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:37:13+0000","dateFinished":"2018-10-15T22:37:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:316"},{"title":"Use Cross Validator to fit the training data set","text":"val pipelineModel = crossvalidator.fit(trainingData)","user":"mapr","dateUpdated":"2018-10-16T15:24:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"pipelineModel: org.apache.spark.ml.tuning.CrossValidatorModel = cv_9dbfa572e967"}]},"apps":[],"jobName":"paragraph_1538598418123_-731650481","id":"20171129-113112_994877662","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:37:20+0000","dateFinished":"2018-10-15T22:39:30+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:317"},{"text":"val featureImportances = pipelineModel.bestModel.asInstanceOf[PipelineModel].stages(stringIndexers.size + 2).asInstanceOf[RandomForestClassificationModel].featureImportances\n\nassembler.getInputCols.zip(featureImportances.toArray).sortBy(-_._2).foreach { case (feat, imp) => println(s\"feature: $feat, importance: $imp\") }\n","user":"mapr","dateUpdated":"2018-10-15T21:30:26+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"feature: crsdeptime, importance: 0.29575581632239106\nfeature: orig_destIndexed, importance: 0.23390575439061792\nfeature: crsarrtime, importance: 0.14289808927641104\nfeature: crsdephour, importance: 0.11763885338135052\nfeature: destIndexed, importance: 0.08629546879156512\nfeature: originIndexed, importance: 0.04546373430972022\nfeature: dist, importance: 0.022210609406997425\nfeature: dofWIndexed, importance: 0.0213757944250055\nfeature: carrierIndexed, importance: 0.018967235119003906\nfeature: crselapsedtime, importance: 0.015488644576937206"}]},"apps":[],"jobName":"paragraph_1538598418125_-733958974","id":"20171122-232203_359528816","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T21:30:26+0000","dateFinished":"2018-10-15T21:30:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:318"},{"text":"val bestEstimatorParamMap = pipelineModel.getEstimatorParamMaps.zip(pipelineModel.avgMetrics).maxBy(_._2)._1\nprintln(s\"Best params:\\n$bestEstimatorParamMap\")","user":"mapr","dateUpdated":"2018-10-15T21:28:06+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Best params:\n{\n\trfc_a950be78200b-impurity: entropy,\n\trfc_a950be78200b-maxBins: 100,\n\trfc_a950be78200b-maxDepth: 4,\n\trfc_a950be78200b-numTrees: 20\n}"}]},"apps":[],"jobName":"paragraph_1538598418126_-732804728","id":"20171122-232845_814296940","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T21:30:05+0000","dateFinished":"2018-10-15T21:30:08+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:319"},{"text":"%md\r\nThe actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We'll transform the test set with the model pipeline, which will map the features according to the same recipe. \r\n","dateUpdated":"2018-10-03T20:26:58+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>The actual performance of the model can be determined using the test data set which has not been used for any training or cross-validation activities. We&rsquo;ll transform the test set with the model pipeline, which will map the features according to the same recipe.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418128_-722801256","id":"20170602-155317_1487132664","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:320"},{"title":"Get Predictions from Test data","text":"//transform the test set with the model pipeline,\n//which will map the features according to the same recipe\n\nval predictions = pipelineModel.transform(testData)\n","user":"mapr","dateUpdated":"2018-10-15T22:49:34+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"predictions: org.apache.spark.sql.DataFrame = [_id: string, dofW: int ... 22 more fields]"}]},"apps":[],"jobName":"paragraph_1538598418129_-723186005","id":"20170508-155848_1997894070","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:40:42+0000","dateFinished":"2018-10-15T22:40:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:321"},{"text":"%md\nAccuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are. \n\n","user":"mapr","dateUpdated":"2018-10-15T20:58:33+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p>Accuracy is measured by the area under the ROC curve. The area measures the ability of the test to correctly classify true positives from false positives. A random predictor would have .5 accuracy. The closer the value is to 1 the better its predictions are.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1538598418130_-722031759","id":"20170602-161538_1648758337","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T20:58:33+0000","dateFinished":"2018-10-15T20:58:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:322"},{"title":"Evaluate the predictions accuracy","text":"\nval areaUnderROC = evaluator.evaluate(predictions)\nprintln(\"areaUnderROC \"  + areaUnderROC)\n","user":"mapr","dateUpdated":"2018-10-15T22:41:24+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"areaUnderROC 0.6948873007753289"}]},"apps":[],"jobName":"paragraph_1538598418130_-722031759","id":"20170602-155622_1453197792","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-15T22:41:24+0000","dateFinished":"2018-10-15T22:41:27+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:323"},{"title":"Calculate some more metrics","text":"val lp = predictions.select( \"label\", \"prediction\")\nval counttotal = predictions.count()\nval correct = lp.filter($\"label\" === $\"prediction\").count()\nval wrong = lp.filter(not($\"label\" === $\"prediction\")).count()\nval truep =( lp.filter($\"prediction\" === 0.0).filter($\"label\" === $\"prediction\").count()) /counttotal.toDouble\nval truen = (lp.filter($\"prediction\" === 1.0).filter($\"label\" === $\"prediction\").count())/counttotal.toDouble\nval falsen = (lp.filter($\"prediction\" === 0.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal.toDouble\nval falsep = (lp.filter($\"prediction\" === 1.0).filter(not($\"label\" === $\"prediction\")).count())/counttotal.toDouble\nval ratioWrong=wrong.toDouble/counttotal.toDouble\nval ratioCorrect=correct.toDouble/counttotal.toDouble\n\nval precision = truep / (truep + falsep)\nval recall = truep / (truep + falsen)\nval fmeasure = 2 * precision * recall / (precision + recall)","user":"mapr","dateUpdated":"2018-10-15T23:04:18+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"fmeasure: Double = 0.7354569950242176"}]},"apps":[],"jobName":"paragraph_1539643351969_1929783022","id":"20181015-224231_2027590368","dateCreated":"2018-10-15T22:42:31+0000","dateStarted":"2018-10-15T23:04:18+0000","dateFinished":"2018-10-15T23:04:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:324"},{"text":"println( \"ratio Correct\" + ratioCorrect +\"\\nratio wrong \"+ratioWrong +\"\\ntrue positive \"+truep + \"\\ntrue negative \"+ truen + \"\\nfalse negative \" + falsen+  \"\\nfalse positive \"+ falsep )","user":"mapr","dateUpdated":"2018-10-15T23:04:33+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"ratio Correct0.6129679791041889\nratio wrong 0.3870320208958112\ntrue positive 0.537994582567476\ntrue negative 0.07497339653671278\nfalse negative 0.035261681338879754\nfalse positive 0.35177033955693143"}]},"apps":[],"jobName":"paragraph_1538687653653_-1894097609","id":"20181004-211413_1357524146","dateCreated":"2018-10-04T21:14:13+0000","dateStarted":"2018-10-15T23:04:33+0000","dateFinished":"2018-10-15T23:04:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:325"},{"text":"println( \"\\nprecision \"+ precision+ \"\\nrecall \" + recall+ \"\\nf_measure \" + fmeasure )","user":"mapr","dateUpdated":"2018-10-15T22:48:03+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"precision 0.6046480021745039\nrecall 0.938488798886217\nf_measure 0.7354569950242176"}]},"apps":[],"jobName":"paragraph_1539639573232_2124289774","id":"20181015-213933_2083506099","dateCreated":"2018-10-15T21:39:33+0000","dateStarted":"2018-10-15T22:48:03+0000","dateFinished":"2018-10-15T22:48:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:326"},{"text":"predictions.select(\"label\",\"prediction\",\"crsdephour\").show","user":"mapr","dateUpdated":"2018-10-04T21:25:31+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----+----------+----------+\n|label|prediction|crsdephour|\n+-----+----------+----------+\n|  0.0|       0.0|        11|\n|  1.0|       1.0|        21|\n|  0.0|       0.0|        19|\n|  0.0|       0.0|        14|\n|  0.0|       0.0|        18|\n|  0.0|       0.0|        13|\n|  1.0|       0.0|        10|\n|  1.0|       0.0|        13|\n|  1.0|       0.0|        16|\n|  1.0|       0.0|        19|\n|  1.0|       0.0|        15|\n|  1.0|       1.0|        18|\n|  1.0|       0.0|        16|\n|  1.0|       1.0|        21|\n|  1.0|       0.0|        18|\n|  0.0|       0.0|        10|\n|  1.0|       0.0|        13|\n|  0.0|       0.0|        10|\n|  0.0|       0.0|        21|\n|  0.0|       1.0|        18|\n+-----+----------+----------+\nonly showing top 20 rows"}]},"apps":[],"jobName":"paragraph_1538598418134_-723570754","id":"20171107-112947_525619195","dateCreated":"2018-10-03T20:26:58+0000","dateStarted":"2018-10-04T21:25:31+0000","dateFinished":"2018-10-04T21:25:33+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:327"},{"dateUpdated":"2018-10-03T20:26:58+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1538598418136_-725879248","id":"20171122-091021_1615582434","dateCreated":"2018-10-03T20:26:58+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:328"}],"name":"sparkmlpipelineflightdelays","id":"2DRKVA92A","angularObjects":{"2DT47VE7F:shared_process":[],"2DS3PJDR4:shared_process":[],"2DURH8ZDQ:shared_process":[],"2DSVZ6BV4:shared_process":[],"2DUJE2W1U:shared_process":[],"2DUTH9WX3:shared_process":[],"2DS71DNDG:shared_process":[],"2DVF7XZD2:shared_process":[],"2DV4T17GU:shared_process":[],"2DU4KXRJS:shared_process":[],"2DVFRTYWC:shared_process":[],"2DT7YM2WM:shared_process":[],"2DS7KA6DF:shared_process":[],"2DTENHS7X:shared_process":[],"2DTPAESF2:shared_process":[],"2DV9G612S:shared_process":[],"2DUV1VS6M:shared_process":[],"2DV3KWKXC:shared_process":[],"2DUAZBSTV:shared_process":[],"2DUD75YC9:shared_process":[]},"config":{"looknfeel":"simple","personalizedMode":"false"},"info":{}}